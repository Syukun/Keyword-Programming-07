4, 0, -5.0, 1.0, -5.0, 0.0, 11, contains(), -4.0
4, 1, -5.0, 1.0, -5.0, 0.5, 11, contains(), -4.0
4, 2, -5.0, 1.0, -5.0, 1.0, 11, contains(), -4.0
4, 3, -5.0, 1.0, -5.0, 1.5, 11, contains(), -4.0
4, 4, -5.0, 1.0, -5.0, 2.0, 11, contains(), -4.0
4, 5, -5.0, 1.0, -5.0, 2.5, 11, contains(), -4.0
4, 6, -5.0, 1.0, -5.0, 3.0, 11, contains(), -4.0
4, 7, -5.0, 1.0, -5.0, 3.5, 11, contains(), -4.0
4, 8, -5.0, 1.0, -5.0, 4.0, 11, contains(), -4.0
4, 9, -5.0, 1.0, -5.0, 4.5, 9, food.contains(), -3.5
4, 10, -5.0, 1.0, -5.0, 5.0, 9, food.contains(), -3.0
4, 11, -5.0, 1.0, -4.5, 0.0, 11, contains(), -4.0
4, 12, -5.0, 1.0, -4.5, 0.5, 11, contains(), -4.0
4, 13, -5.0, 1.0, -4.5, 1.0, 11, contains(), -4.0
4, 14, -5.0, 1.0, -4.5, 1.5, 11, contains(), -4.0
4, 15, -5.0, 1.0, -4.5, 2.0, 11, contains(), -4.0
4, 16, -5.0, 1.0, -4.5, 2.5, 11, contains(), -4.0
4, 17, -5.0, 1.0, -4.5, 3.0, 11, contains(), -4.0
4, 18, -5.0, 1.0, -4.5, 3.5, 11, contains(), -4.0
4, 19, -5.0, 1.0, -4.5, 4.0, 11, contains(), -4.0
4, 20, -5.0, 1.0, -4.5, 4.5, 9, food.contains(), -3.5
4, 21, -5.0, 1.0, -4.5, 5.0, 9, food.contains(), -3.0
4, 22, -5.0, 1.0, -4.0, 0.0, 11, contains(), -4.0
4, 23, -5.0, 1.0, -4.0, 0.5, 11, contains(), -4.0
4, 24, -5.0, 1.0, -4.0, 1.0, 11, contains(), -4.0
4, 25, -5.0, 1.0, -4.0, 1.5, 11, contains(), -4.0
4, 26, -5.0, 1.0, -4.0, 2.0, 11, contains(), -4.0
4, 27, -5.0, 1.0, -4.0, 2.5, 11, contains(), -4.0
4, 28, -5.0, 1.0, -4.0, 3.0, 11, contains(), -4.0
4, 29, -5.0, 1.0, -4.0, 3.5, 11, contains(), -4.0
4, 30, -5.0, 1.0, -4.0, 4.0, 11, contains(), -4.0
4, 31, -5.0, 1.0, -4.0, 4.5, 9, food.contains(), -3.5
4, 32, -5.0, 1.0, -4.0, 5.0, 9, food.contains(), -3.0
4, 33, -5.0, 1.0, -3.5, 0.0, 11, contains(), -4.0
4, 34, -5.0, 1.0, -3.5, 0.5, 11, contains(), -4.0
4, 35, -5.0, 1.0, -3.5, 1.0, 11, contains(), -4.0
4, 36, -5.0, 1.0, -3.5, 1.5, 11, contains(), -4.0
4, 37, -5.0, 1.0, -3.5, 2.0, 11, contains(), -4.0
4, 38, -5.0, 1.0, -3.5, 2.5, 11, contains(), -4.0
4, 39, -5.0, 1.0, -3.5, 3.0, 11, contains(), -4.0
4, 40, -5.0, 1.0, -3.5, 3.5, 11, contains(), -4.0
4, 41, -5.0, 1.0, -3.5, 4.0, 11, contains(), -4.0
4, 42, -5.0, 1.0, -3.5, 4.5, 9, food.contains(), -3.5
4, 43, -5.0, 1.0, -3.5, 5.0, 9, food.contains(), -3.0
4, 44, -5.0, 1.0, -3.0, 0.0, 11, contains(), -4.0
4, 45, -5.0, 1.0, -3.0, 0.5, 11, contains(), -4.0
4, 46, -5.0, 1.0, -3.0, 1.0, 11, contains(), -4.0
4, 47, -5.0, 1.0, -3.0, 1.5, 11, contains(), -4.0
4, 48, -5.0, 1.0, -3.0, 2.0, 11, contains(), -4.0
4, 49, -5.0, 1.0, -3.0, 2.5, 11, contains(), -4.0
4, 50, -5.0, 1.0, -3.0, 3.0, 11, contains(), -4.0
4, 51, -5.0, 1.0, -3.0, 3.5, 11, contains(), -4.0
4, 52, -5.0, 1.0, -3.0, 4.0, 11, contains(), -4.0
4, 53, -5.0, 1.0, -3.0, 4.5, 9, food.contains(), -3.5
4, 54, -5.0, 1.0, -3.0, 5.0, 9, food.contains(), -3.0
4, 55, -5.0, 1.0, -2.5, 0.0, 11, contains(), -4.0
4, 56, -5.0, 1.0, -2.5, 0.5, 11, contains(), -4.0
4, 57, -5.0, 1.0, -2.5, 1.0, 11, contains(), -4.0
4, 58, -5.0, 1.0, -2.5, 1.5, 11, contains(), -4.0
4, 59, -5.0, 1.0, -2.5, 2.0, 11, contains(), -4.0
4, 60, -5.0, 1.0, -2.5, 2.5, 11, contains(), -4.0
4, 61, -5.0, 1.0, -2.5, 3.0, 11, contains(), -4.0
4, 62, -5.0, 1.0, -2.5, 3.5, 11, contains(), -4.0
4, 63, -5.0, 1.0, -2.5, 4.0, 11, contains(), -4.0
4, 64, -5.0, 1.0, -2.5, 4.5, 9, food.contains(), -3.5
4, 65, -5.0, 1.0, -2.5, 5.0, 9, food.contains(), -3.0
4, 66, -5.0, 1.0, -2.0, 0.0, 11, contains(), -4.0
4, 67, -5.0, 1.0, -2.0, 0.5, 11, contains(), -4.0
4, 68, -5.0, 1.0, -2.0, 1.0, 11, contains(), -4.0
4, 69, -5.0, 1.0, -2.0, 1.5, 11, contains(), -4.0
4, 70, -5.0, 1.0, -2.0, 2.0, 11, contains(), -4.0
4, 71, -5.0, 1.0, -2.0, 2.5, 11, contains(), -4.0
4, 72, -5.0, 1.0, -2.0, 3.0, 11, contains(), -4.0
4, 73, -5.0, 1.0, -2.0, 3.5, 11, contains(), -4.0
4, 74, -5.0, 1.0, -2.0, 4.0, 11, contains(), -4.0
4, 75, -5.0, 1.0, -2.0, 4.5, 9, food.contains(), -3.5
4, 76, -5.0, 1.0, -2.0, 5.0, 16, food.isFruit(), -3.0
4, 77, -5.0, 1.0, -1.5, 0.0, 11, contains(), -4.0
4, 78, -5.0, 1.0, -1.5, 0.5, 11, contains(), -4.0
4, 79, -5.0, 1.0, -1.5, 1.0, 11, contains(), -4.0
4, 80, -5.0, 1.0, -1.5, 1.5, 11, contains(), -4.0
4, 81, -5.0, 1.0, -1.5, 2.0, 11, contains(), -4.0
4, 82, -5.0, 1.0, -1.5, 2.5, 11, contains(), -4.0
4, 83, -5.0, 1.0, -1.5, 3.0, 11, contains(), -4.0
4, 84, -5.0, 1.0, -1.5, 3.5, 11, contains(), -4.0
4, 85, -5.0, 1.0, -1.5, 4.0, 11, contains(), -4.0
4, 86, -5.0, 1.0, -1.5, 4.5, 16, food.isFruit(), -3.0
4, 87, -5.0, 1.0, -1.5, 5.0, 16, food.isFruit(), -2.0
4, 88, -5.0, 1.0, -1.0, 0.0, 11, contains(), -4.0
4, 89, -5.0, 1.0, -1.0, 0.5, 11, contains(), -4.0
4, 90, -5.0, 1.0, -1.0, 1.0, 11, contains(), -4.0
4, 91, -5.0, 1.0, -1.0, 1.5, 11, contains(), -4.0
4, 92, -5.0, 1.0, -1.0, 2.0, 11, contains(), -4.0
4, 93, -5.0, 1.0, -1.0, 2.5, 11, contains(), -4.0
4, 94, -5.0, 1.0, -1.0, 3.0, 11, contains(), -4.0
4, 95, -5.0, 1.0, -1.0, 3.5, 16, isFruit(), -3.5
4, 96, -5.0, 1.0, -1.0, 4.0, 16, isFruit(), -3.0
4, 97, -5.0, 1.0, -1.0, 4.5, 16, food.isFruit(), -2.0
4, 98, -5.0, 1.0, -1.0, 5.0, 16, food.isFruit(), -1.0
4, 99, -5.0, 1.0, -0.5, 0.0, 11, contains(), -4.0
4, 100, -5.0, 1.0, -0.5, 0.5, 11, contains(), -4.0
4, 101, -5.0, 1.0, -0.5, 1.0, 11, contains(), -4.0
4, 102, -5.0, 1.0, -0.5, 1.5, 11, contains(), -4.0
4, 103, -5.0, 1.0, -0.5, 2.0, 11, contains(), -4.0
4, 104, -5.0, 1.0, -0.5, 2.5, 16, isFruit(), -3.5
4, 105, -5.0, 1.0, -0.5, 3.0, 16, isFruit(), -3.0
4, 106, -5.0, 1.0, -0.5, 3.5, 16, isFruit(), -2.5
4, 107, -5.0, 1.0, -0.5, 4.0, 16, isFruit(), -2.0
4, 108, -5.0, 1.0, -0.5, 4.5, 16, food.isFruit(), -1.0
4, 109, -5.0, 1.0, -0.5, 5.0, 16, food.isFruit(), 0.0
4, 110, -5.0, 1.0, 0.0, 0.0, 12, containsKey(), -4.0
4, 111, -5.0, 1.0, 0.0, 0.5, 12, containsKey(), -4.0
4, 112, -5.0, 1.0, 0.0, 1.0, 12, containsKey(), -4.0
4, 113, -5.0, 1.0, 0.0, 1.5, 16, isFruit(), -3.5
4, 114, -5.0, 1.0, 0.0, 2.0, 16, isFruit(), -3.0
4, 115, -5.0, 1.0, 0.0, 2.5, 16, isFruit(), -2.5
4, 116, -5.0, 1.0, 0.0, 3.0, 16, isFruit(), -2.0
4, 117, -5.0, 1.0, 0.0, 3.5, 16, isFruit(), -1.5
4, 118, -5.0, 1.0, 0.0, 4.0, 16, isFruit(), -1.0
4, 119, -5.0, 1.0, 0.0, 4.5, 16, food.isFruit(), 0.0
4, 120, -5.0, 1.0, 0.0, 5.0, 16, food.isFruit(), 1.0
4, 121, -4.5, 1.0, -5.0, 0.0, 11, contains(), -3.5
4, 122, -4.5, 1.0, -5.0, 0.5, 11, contains(), -3.5
4, 123, -4.5, 1.0, -5.0, 1.0, 11, contains(), -3.5
4, 124, -4.5, 1.0, -5.0, 1.5, 11, contains(), -3.5
4, 125, -4.5, 1.0, -5.0, 2.0, 11, contains(), -3.5
4, 126, -4.5, 1.0, -5.0, 2.5, 11, contains(), -3.5
4, 127, -4.5, 1.0, -5.0, 3.0, 11, contains(), -3.5
4, 128, -4.5, 1.0, -5.0, 3.5, 11, contains(), -3.5
4, 129, -4.5, 1.0, -5.0, 4.0, 9, food.contains(), -3.0
4, 130, -4.5, 1.0, -5.0, 4.5, 9, food.contains(), -2.5
4, 131, -4.5, 1.0, -5.0, 5.0, 9, food.contains(), -2.0
4, 132, -4.5, 1.0, -4.5, 0.0, 11, contains(), -3.5
4, 133, -4.5, 1.0, -4.5, 0.5, 11, contains(), -3.5
4, 134, -4.5, 1.0, -4.5, 1.0, 11, contains(), -3.5
4, 135, -4.5, 1.0, -4.5, 1.5, 11, contains(), -3.5
4, 136, -4.5, 1.0, -4.5, 2.0, 11, contains(), -3.5
4, 137, -4.5, 1.0, -4.5, 2.5, 11, contains(), -3.5
4, 138, -4.5, 1.0, -4.5, 3.0, 11, contains(), -3.5
4, 139, -4.5, 1.0, -4.5, 3.5, 11, contains(), -3.5
4, 140, -4.5, 1.0, -4.5, 4.0, 9, food.contains(), -3.0
4, 141, -4.5, 1.0, -4.5, 4.5, 9, food.contains(), -2.5
4, 142, -4.5, 1.0, -4.5, 5.0, 9, food.contains(), -2.0
4, 143, -4.5, 1.0, -4.0, 0.0, 11, contains(), -3.5
4, 144, -4.5, 1.0, -4.0, 0.5, 11, contains(), -3.5
4, 145, -4.5, 1.0, -4.0, 1.0, 11, contains(), -3.5
4, 146, -4.5, 1.0, -4.0, 1.5, 11, contains(), -3.5
4, 147, -4.5, 1.0, -4.0, 2.0, 11, contains(), -3.5
4, 148, -4.5, 1.0, -4.0, 2.5, 11, contains(), -3.5
4, 149, -4.5, 1.0, -4.0, 3.0, 11, contains(), -3.5
4, 150, -4.5, 1.0, -4.0, 3.5, 11, contains(), -3.5
4, 151, -4.5, 1.0, -4.0, 4.0, 9, food.contains(), -3.0
4, 152, -4.5, 1.0, -4.0, 4.5, 9, food.contains(), -2.5
4, 153, -4.5, 1.0, -4.0, 5.0, 9, food.contains(), -2.0
4, 154, -4.5, 1.0, -3.5, 0.0, 11, contains(), -3.5
4, 155, -4.5, 1.0, -3.5, 0.5, 11, contains(), -3.5
4, 156, -4.5, 1.0, -3.5, 1.0, 11, contains(), -3.5
4, 157, -4.5, 1.0, -3.5, 1.5, 11, contains(), -3.5
4, 158, -4.5, 1.0, -3.5, 2.0, 11, contains(), -3.5
4, 159, -4.5, 1.0, -3.5, 2.5, 11, contains(), -3.5
4, 160, -4.5, 1.0, -3.5, 3.0, 11, contains(), -3.5
4, 161, -4.5, 1.0, -3.5, 3.5, 11, contains(), -3.5
4, 162, -4.5, 1.0, -3.5, 4.0, 9, food.contains(), -3.0
4, 163, -4.5, 1.0, -3.5, 4.5, 9, food.contains(), -2.5
4, 164, -4.5, 1.0, -3.5, 5.0, 9, food.contains(), -2.0
4, 165, -4.5, 1.0, -3.0, 0.0, 11, contains(), -3.5
4, 166, -4.5, 1.0, -3.0, 0.5, 11, contains(), -3.5
4, 167, -4.5, 1.0, -3.0, 1.0, 11, contains(), -3.5
4, 168, -4.5, 1.0, -3.0, 1.5, 11, contains(), -3.5
4, 169, -4.5, 1.0, -3.0, 2.0, 11, contains(), -3.5
4, 170, -4.5, 1.0, -3.0, 2.5, 11, contains(), -3.5
4, 171, -4.5, 1.0, -3.0, 3.0, 11, contains(), -3.5
4, 172, -4.5, 1.0, -3.0, 3.5, 11, contains(), -3.5
4, 173, -4.5, 1.0, -3.0, 4.0, 9, food.contains(), -3.0
4, 174, -4.5, 1.0, -3.0, 4.5, 9, food.contains(), -2.5
4, 175, -4.5, 1.0, -3.0, 5.0, 9, food.contains(), -2.0
4, 176, -4.5, 1.0, -2.5, 0.0, 11, contains(), -3.5
4, 177, -4.5, 1.0, -2.5, 0.5, 11, contains(), -3.5
4, 178, -4.5, 1.0, -2.5, 1.0, 11, contains(), -3.5
4, 179, -4.5, 1.0, -2.5, 1.5, 11, contains(), -3.5
4, 180, -4.5, 1.0, -2.5, 2.0, 11, contains(), -3.5
4, 181, -4.5, 1.0, -2.5, 2.5, 11, contains(), -3.5
4, 182, -4.5, 1.0, -2.5, 3.0, 11, contains(), -3.5
4, 183, -4.5, 1.0, -2.5, 3.5, 11, contains(), -3.5
4, 184, -4.5, 1.0, -2.5, 4.0, 9, food.contains(), -3.0
4, 185, -4.5, 1.0, -2.5, 4.5, 9, food.contains(), -2.5
4, 186, -4.5, 1.0, -2.5, 5.0, 9, food.contains(), -2.0
4, 187, -4.5, 1.0, -2.0, 0.0, 11, contains(), -3.5
4, 188, -4.5, 1.0, -2.0, 0.5, 11, contains(), -3.5
4, 189, -4.5, 1.0, -2.0, 1.0, 11, contains(), -3.5
4, 190, -4.5, 1.0, -2.0, 1.5, 11, contains(), -3.5
4, 191, -4.5, 1.0, -2.0, 2.0, 11, contains(), -3.5
4, 192, -4.5, 1.0, -2.0, 2.5, 11, contains(), -3.5
4, 193, -4.5, 1.0, -2.0, 3.0, 11, contains(), -3.5
4, 194, -4.5, 1.0, -2.0, 3.5, 11, contains(), -3.5
4, 195, -4.5, 1.0, -2.0, 4.0, 9, food.contains(), -3.0
4, 196, -4.5, 1.0, -2.0, 4.5, 9, food.contains(), -2.5
4, 197, -4.5, 1.0, -2.0, 5.0, 16, food.isFruit(), -2.0
4, 198, -4.5, 1.0, -1.5, 0.0, 11, contains(), -3.5
4, 199, -4.5, 1.0, -1.5, 0.5, 11, contains(), -3.5
4, 200, -4.5, 1.0, -1.5, 1.0, 11, contains(), -3.5
4, 201, -4.5, 1.0, -1.5, 1.5, 11, contains(), -3.5
4, 202, -4.5, 1.0, -1.5, 2.0, 11, contains(), -3.5
4, 203, -4.5, 1.0, -1.5, 2.5, 11, contains(), -3.5
4, 204, -4.5, 1.0, -1.5, 3.0, 11, contains(), -3.5
4, 205, -4.5, 1.0, -1.5, 3.5, 11, contains(), -3.5
4, 206, -4.5, 1.0, -1.5, 4.0, 16, food.isFruit(), -3.0
4, 207, -4.5, 1.0, -1.5, 4.5, 16, food.isFruit(), -2.0
4, 208, -4.5, 1.0, -1.5, 5.0, 16, food.isFruit(), -1.0
4, 209, -4.5, 1.0, -1.0, 0.0, 11, contains(), -3.5
4, 210, -4.5, 1.0, -1.0, 0.5, 11, contains(), -3.5
4, 211, -4.5, 1.0, -1.0, 1.0, 11, contains(), -3.5
4, 212, -4.5, 1.0, -1.0, 1.5, 11, contains(), -3.5
4, 213, -4.5, 1.0, -1.0, 2.0, 11, contains(), -3.5
4, 214, -4.5, 1.0, -1.0, 2.5, 11, contains(), -3.5
4, 215, -4.5, 1.0, -1.0, 3.0, 11, contains(), -3.5
4, 216, -4.5, 1.0, -1.0, 3.5, 16, isFruit(), -3.0
4, 217, -4.5, 1.0, -1.0, 4.0, 16, food.isFruit(), -2.0
4, 218, -4.5, 1.0, -1.0, 4.5, 16, food.isFruit(), -1.0
4, 219, -4.5, 1.0, -1.0, 5.0, 16, food.isFruit(), 0.0
4, 220, -4.5, 1.0, -0.5, 0.0, 11, contains(), -3.5
4, 221, -4.5, 1.0, -0.5, 0.5, 11, contains(), -3.5
4, 222, -4.5, 1.0, -0.5, 1.0, 11, contains(), -3.5
4, 223, -4.5, 1.0, -0.5, 1.5, 11, contains(), -3.5
4, 224, -4.5, 1.0, -0.5, 2.0, 11, contains(), -3.5
4, 225, -4.5, 1.0, -0.5, 2.5, 16, isFruit(), -3.0
4, 226, -4.5, 1.0, -0.5, 3.0, 16, isFruit(), -2.5
4, 227, -4.5, 1.0, -0.5, 3.5, 16, isFruit(), -2.0
4, 228, -4.5, 1.0, -0.5, 4.0, 16, food.isFruit(), -1.0
4, 229, -4.5, 1.0, -0.5, 4.5, 16, food.isFruit(), 0.0
4, 230, -4.5, 1.0, -0.5, 5.0, 16, food.isFruit(), 1.0
4, 231, -4.5, 1.0, 0.0, 0.0, 12, containsKey(), -3.5
4, 232, -4.5, 1.0, 0.0, 0.5, 12, containsKey(), -3.5
4, 233, -4.5, 1.0, 0.0, 1.0, 12, containsKey(), -3.5
4, 234, -4.5, 1.0, 0.0, 1.5, 16, isFruit(), -3.0
4, 235, -4.5, 1.0, 0.0, 2.0, 16, isFruit(), -2.5
4, 236, -4.5, 1.0, 0.0, 2.5, 16, isFruit(), -2.0
4, 237, -4.5, 1.0, 0.0, 3.0, 16, isFruit(), -1.5
4, 238, -4.5, 1.0, 0.0, 3.5, 16, isFruit(), -1.0
4, 239, -4.5, 1.0, 0.0, 4.0, 16, food.isFruit(), 0.0
4, 240, -4.5, 1.0, 0.0, 4.5, 16, food.isFruit(), 1.0
4, 241, -4.5, 1.0, 0.0, 5.0, 18, new Task04().isFruit(food), 2.5
4, 242, -4.0, 1.0, -5.0, 0.0, 11, contains(), -3.0
4, 243, -4.0, 1.0, -5.0, 0.5, 11, contains(), -3.0
4, 244, -4.0, 1.0, -5.0, 1.0, 11, contains(), -3.0
4, 245, -4.0, 1.0, -5.0, 1.5, 11, contains(), -3.0
4, 246, -4.0, 1.0, -5.0, 2.0, 11, contains(), -3.0
4, 247, -4.0, 1.0, -5.0, 2.5, 11, contains(), -3.0
4, 248, -4.0, 1.0, -5.0, 3.0, 11, contains(), -3.0
4, 249, -4.0, 1.0, -5.0, 3.5, 9, food.contains(), -2.5
4, 250, -4.0, 1.0, -5.0, 4.0, 9, food.contains(), -2.0
4, 251, -4.0, 1.0, -5.0, 4.5, 9, food.contains(), -1.5
4, 252, -4.0, 1.0, -5.0, 5.0, 9, food.contains(), -1.0
4, 253, -4.0, 1.0, -4.5, 0.0, 11, contains(), -3.0
4, 254, -4.0, 1.0, -4.5, 0.5, 11, contains(), -3.0
4, 255, -4.0, 1.0, -4.5, 1.0, 11, contains(), -3.0
4, 256, -4.0, 1.0, -4.5, 1.5, 11, contains(), -3.0
4, 257, -4.0, 1.0, -4.5, 2.0, 11, contains(), -3.0
4, 258, -4.0, 1.0, -4.5, 2.5, 11, contains(), -3.0
4, 259, -4.0, 1.0, -4.5, 3.0, 11, contains(), -3.0
4, 260, -4.0, 1.0, -4.5, 3.5, 9, food.contains(), -2.5
4, 261, -4.0, 1.0, -4.5, 4.0, 9, food.contains(), -2.0
4, 262, -4.0, 1.0, -4.5, 4.5, 9, food.contains(), -1.5
4, 263, -4.0, 1.0, -4.5, 5.0, 9, food.contains(), -1.0
4, 264, -4.0, 1.0, -4.0, 0.0, 11, contains(), -3.0
4, 265, -4.0, 1.0, -4.0, 0.5, 11, contains(), -3.0
4, 266, -4.0, 1.0, -4.0, 1.0, 11, contains(), -3.0
4, 267, -4.0, 1.0, -4.0, 1.5, 11, contains(), -3.0
4, 268, -4.0, 1.0, -4.0, 2.0, 11, contains(), -3.0
4, 269, -4.0, 1.0, -4.0, 2.5, 11, contains(), -3.0
4, 270, -4.0, 1.0, -4.0, 3.0, 11, contains(), -3.0
4, 271, -4.0, 1.0, -4.0, 3.5, 9, food.contains(), -2.5
4, 272, -4.0, 1.0, -4.0, 4.0, 9, food.contains(), -2.0
4, 273, -4.0, 1.0, -4.0, 4.5, 9, food.contains(), -1.5
4, 274, -4.0, 1.0, -4.0, 5.0, 9, food.contains(), -1.0
4, 275, -4.0, 1.0, -3.5, 0.0, 11, contains(), -3.0
4, 276, -4.0, 1.0, -3.5, 0.5, 11, contains(), -3.0
4, 277, -4.0, 1.0, -3.5, 1.0, 11, contains(), -3.0
4, 278, -4.0, 1.0, -3.5, 1.5, 11, contains(), -3.0
4, 279, -4.0, 1.0, -3.5, 2.0, 11, contains(), -3.0
4, 280, -4.0, 1.0, -3.5, 2.5, 11, contains(), -3.0
4, 281, -4.0, 1.0, -3.5, 3.0, 11, contains(), -3.0
4, 282, -4.0, 1.0, -3.5, 3.5, 9, food.contains(), -2.5
4, 283, -4.0, 1.0, -3.5, 4.0, 9, food.contains(), -2.0
4, 284, -4.0, 1.0, -3.5, 4.5, 9, food.contains(), -1.5
4, 285, -4.0, 1.0, -3.5, 5.0, 9, food.contains(), -1.0
4, 286, -4.0, 1.0, -3.0, 0.0, 11, contains(), -3.0
4, 287, -4.0, 1.0, -3.0, 0.5, 11, contains(), -3.0
4, 288, -4.0, 1.0, -3.0, 1.0, 11, contains(), -3.0
4, 289, -4.0, 1.0, -3.0, 1.5, 11, contains(), -3.0
4, 290, -4.0, 1.0, -3.0, 2.0, 11, contains(), -3.0
4, 291, -4.0, 1.0, -3.0, 2.5, 11, contains(), -3.0
4, 292, -4.0, 1.0, -3.0, 3.0, 11, contains(), -3.0
4, 293, -4.0, 1.0, -3.0, 3.5, 9, food.contains(), -2.5
4, 294, -4.0, 1.0, -3.0, 4.0, 9, food.contains(), -2.0
4, 295, -4.0, 1.0, -3.0, 4.5, 9, food.contains(), -1.5
4, 296, -4.0, 1.0, -3.0, 5.0, 9, food.contains(), -1.0
4, 297, -4.0, 1.0, -2.5, 0.0, 11, contains(), -3.0
4, 298, -4.0, 1.0, -2.5, 0.5, 11, contains(), -3.0
4, 299, -4.0, 1.0, -2.5, 1.0, 11, contains(), -3.0
4, 300, -4.0, 1.0, -2.5, 1.5, 11, contains(), -3.0
4, 301, -4.0, 1.0, -2.5, 2.0, 11, contains(), -3.0
4, 302, -4.0, 1.0, -2.5, 2.5, 11, contains(), -3.0
4, 303, -4.0, 1.0, -2.5, 3.0, 11, contains(), -3.0
4, 304, -4.0, 1.0, -2.5, 3.5, 9, food.contains(), -2.5
4, 305, -4.0, 1.0, -2.5, 4.0, 9, food.contains(), -2.0
4, 306, -4.0, 1.0, -2.5, 4.5, 9, food.contains(), -1.5
4, 307, -4.0, 1.0, -2.5, 5.0, 9, food.contains(), -1.0
4, 308, -4.0, 1.0, -2.0, 0.0, 11, contains(), -3.0
4, 309, -4.0, 1.0, -2.0, 0.5, 11, contains(), -3.0
4, 310, -4.0, 1.0, -2.0, 1.0, 11, contains(), -3.0
4, 311, -4.0, 1.0, -2.0, 1.5, 11, contains(), -3.0
4, 312, -4.0, 1.0, -2.0, 2.0, 11, contains(), -3.0
4, 313, -4.0, 1.0, -2.0, 2.5, 11, contains(), -3.0
4, 314, -4.0, 1.0, -2.0, 3.0, 11, contains(), -3.0
4, 315, -4.0, 1.0, -2.0, 3.5, 9, food.contains(), -2.5
4, 316, -4.0, 1.0, -2.0, 4.0, 9, food.contains(), -2.0
4, 317, -4.0, 1.0, -2.0, 4.5, 9, food.contains(), -1.5
4, 318, -4.0, 1.0, -2.0, 5.0, 16, food.isFruit(), -1.0
4, 319, -4.0, 1.0, -1.5, 0.0, 11, contains(), -3.0
4, 320, -4.0, 1.0, -1.5, 0.5, 11, contains(), -3.0
4, 321, -4.0, 1.0, -1.5, 1.0, 11, contains(), -3.0
4, 322, -4.0, 1.0, -1.5, 1.5, 11, contains(), -3.0
4, 323, -4.0, 1.0, -1.5, 2.0, 11, contains(), -3.0
4, 324, -4.0, 1.0, -1.5, 2.5, 11, contains(), -3.0
4, 325, -4.0, 1.0, -1.5, 3.0, 11, contains(), -3.0
4, 326, -4.0, 1.0, -1.5, 3.5, 9, food.contains(), -2.5
4, 327, -4.0, 1.0, -1.5, 4.0, 16, food.isFruit(), -2.0
4, 328, -4.0, 1.0, -1.5, 4.5, 16, food.isFruit(), -1.0
4, 329, -4.0, 1.0, -1.5, 5.0, 16, food.isFruit(), 0.0
4, 330, -4.0, 1.0, -1.0, 0.0, 11, contains(), -3.0
4, 331, -4.0, 1.0, -1.0, 0.5, 11, contains(), -3.0
4, 332, -4.0, 1.0, -1.0, 1.0, 11, contains(), -3.0
4, 333, -4.0, 1.0, -1.0, 1.5, 11, contains(), -3.0
4, 334, -4.0, 1.0, -1.0, 2.0, 11, contains(), -3.0
4, 335, -4.0, 1.0, -1.0, 2.5, 11, contains(), -3.0
4, 336, -4.0, 1.0, -1.0, 3.0, 11, contains(), -3.0
4, 337, -4.0, 1.0, -1.0, 3.5, 16, food.isFruit(), -2.0
4, 338, -4.0, 1.0, -1.0, 4.0, 16, food.isFruit(), -1.0
4, 339, -4.0, 1.0, -1.0, 4.5, 16, food.isFruit(), 0.0
4, 340, -4.0, 1.0, -1.0, 5.0, 16, food.isFruit(), 1.0
4, 341, -4.0, 1.0, -0.5, 0.0, 11, contains(), -3.0
4, 342, -4.0, 1.0, -0.5, 0.5, 11, contains(), -3.0
4, 343, -4.0, 1.0, -0.5, 1.0, 11, contains(), -3.0
4, 344, -4.0, 1.0, -0.5, 1.5, 11, contains(), -3.0
4, 345, -4.0, 1.0, -0.5, 2.0, 11, contains(), -3.0
4, 346, -4.0, 1.0, -0.5, 2.5, 16, isFruit(), -2.5
4, 347, -4.0, 1.0, -0.5, 3.0, 16, isFruit(), -2.0
4, 348, -4.0, 1.0, -0.5, 3.5, 16, food.isFruit(), -1.0
4, 349, -4.0, 1.0, -0.5, 4.0, 16, food.isFruit(), 0.0
4, 350, -4.0, 1.0, -0.5, 4.5, 16, food.isFruit(), 1.0
4, 351, -4.0, 1.0, -0.5, 5.0, 16, food.isFruit(), 2.0
4, 352, -4.0, 1.0, 0.0, 0.0, 12, containsKey(), -3.0
4, 353, -4.0, 1.0, 0.0, 0.5, 12, containsKey(), -3.0
4, 354, -4.0, 1.0, 0.0, 1.0, 12, containsKey(), -3.0
4, 355, -4.0, 1.0, 0.0, 1.5, 16, isFruit(), -2.5
4, 356, -4.0, 1.0, 0.0, 2.0, 16, isFruit(), -2.0
4, 357, -4.0, 1.0, 0.0, 2.5, 16, isFruit(), -1.5
4, 358, -4.0, 1.0, 0.0, 3.0, 16, isFruit(), -1.0
4, 359, -4.0, 1.0, 0.0, 3.5, 16, food.isFruit(), 0.0
4, 360, -4.0, 1.0, 0.0, 4.0, 16, food.isFruit(), 1.0
4, 361, -4.0, 1.0, 0.0, 4.5, 18, new Task04().isFruit(food), 2.5
4, 362, -4.0, 1.0, 0.0, 5.0, 18, new Task04().isFruit(food), 4.0
4, 363, -3.5, 1.0, -5.0, 0.0, 11, contains(), -2.5
4, 364, -3.5, 1.0, -5.0, 0.5, 11, contains(), -2.5
4, 365, -3.5, 1.0, -5.0, 1.0, 11, contains(), -2.5
4, 366, -3.5, 1.0, -5.0, 1.5, 11, contains(), -2.5
4, 367, -3.5, 1.0, -5.0, 2.0, 11, contains(), -2.5
4, 368, -3.5, 1.0, -5.0, 2.5, 11, contains(), -2.5
4, 369, -3.5, 1.0, -5.0, 3.0, 9, food.contains(), -2.0
4, 370, -3.5, 1.0, -5.0, 3.5, 9, food.contains(), -1.5
4, 371, -3.5, 1.0, -5.0, 4.0, 9, food.contains(), -1.0
4, 372, -3.5, 1.0, -5.0, 4.5, 9, food.contains(), -0.5
4, 373, -3.5, 1.0, -5.0, 5.0, 9, food.contains(), 0.0
4, 374, -3.5, 1.0, -4.5, 0.0, 11, contains(), -2.5
4, 375, -3.5, 1.0, -4.5, 0.5, 11, contains(), -2.5
4, 376, -3.5, 1.0, -4.5, 1.0, 11, contains(), -2.5
4, 377, -3.5, 1.0, -4.5, 1.5, 11, contains(), -2.5
4, 378, -3.5, 1.0, -4.5, 2.0, 11, contains(), -2.5
4, 379, -3.5, 1.0, -4.5, 2.5, 11, contains(), -2.5
4, 380, -3.5, 1.0, -4.5, 3.0, 9, food.contains(), -2.0
4, 381, -3.5, 1.0, -4.5, 3.5, 9, food.contains(), -1.5
4, 382, -3.5, 1.0, -4.5, 4.0, 9, food.contains(), -1.0
4, 383, -3.5, 1.0, -4.5, 4.5, 9, food.contains(), -0.5
4, 384, -3.5, 1.0, -4.5, 5.0, 9, food.contains(), 0.0
4, 385, -3.5, 1.0, -4.0, 0.0, 11, contains(), -2.5
4, 386, -3.5, 1.0, -4.0, 0.5, 11, contains(), -2.5
4, 387, -3.5, 1.0, -4.0, 1.0, 11, contains(), -2.5
4, 388, -3.5, 1.0, -4.0, 1.5, 11, contains(), -2.5
4, 389, -3.5, 1.0, -4.0, 2.0, 11, contains(), -2.5
4, 390, -3.5, 1.0, -4.0, 2.5, 11, contains(), -2.5
4, 391, -3.5, 1.0, -4.0, 3.0, 9, food.contains(), -2.0
4, 392, -3.5, 1.0, -4.0, 3.5, 9, food.contains(), -1.5
4, 393, -3.5, 1.0, -4.0, 4.0, 9, food.contains(), -1.0
4, 394, -3.5, 1.0, -4.0, 4.5, 9, food.contains(), -0.5
4, 395, -3.5, 1.0, -4.0, 5.0, 9, food.contains(), 0.0
4, 396, -3.5, 1.0, -3.5, 0.0, 11, contains(), -2.5
4, 397, -3.5, 1.0, -3.5, 0.5, 11, contains(), -2.5
4, 398, -3.5, 1.0, -3.5, 1.0, 11, contains(), -2.5
4, 399, -3.5, 1.0, -3.5, 1.5, 11, contains(), -2.5
4, 400, -3.5, 1.0, -3.5, 2.0, 11, contains(), -2.5
4, 401, -3.5, 1.0, -3.5, 2.5, 11, contains(), -2.5
4, 402, -3.5, 1.0, -3.5, 3.0, 9, food.contains(), -2.0
4, 403, -3.5, 1.0, -3.5, 3.5, 9, food.contains(), -1.5
4, 404, -3.5, 1.0, -3.5, 4.0, 9, food.contains(), -1.0
4, 405, -3.5, 1.0, -3.5, 4.5, 9, food.contains(), -0.5
4, 406, -3.5, 1.0, -3.5, 5.0, 9, food.contains(), 0.0
4, 407, -3.5, 1.0, -3.0, 0.0, 11, contains(), -2.5
4, 408, -3.5, 1.0, -3.0, 0.5, 11, contains(), -2.5
4, 409, -3.5, 1.0, -3.0, 1.0, 11, contains(), -2.5
4, 410, -3.5, 1.0, -3.0, 1.5, 11, contains(), -2.5
4, 411, -3.5, 1.0, -3.0, 2.0, 11, contains(), -2.5
4, 412, -3.5, 1.0, -3.0, 2.5, 11, contains(), -2.5
4, 413, -3.5, 1.0, -3.0, 3.0, 9, food.contains(), -2.0
4, 414, -3.5, 1.0, -3.0, 3.5, 9, food.contains(), -1.5
4, 415, -3.5, 1.0, -3.0, 4.0, 9, food.contains(), -1.0
4, 416, -3.5, 1.0, -3.0, 4.5, 9, food.contains(), -0.5
4, 417, -3.5, 1.0, -3.0, 5.0, 9, food.contains(), 0.0
4, 418, -3.5, 1.0, -2.5, 0.0, 11, contains(), -2.5
4, 419, -3.5, 1.0, -2.5, 0.5, 11, contains(), -2.5
4, 420, -3.5, 1.0, -2.5, 1.0, 11, contains(), -2.5
4, 421, -3.5, 1.0, -2.5, 1.5, 11, contains(), -2.5
4, 422, -3.5, 1.0, -2.5, 2.0, 11, contains(), -2.5
4, 423, -3.5, 1.0, -2.5, 2.5, 11, contains(), -2.5
4, 424, -3.5, 1.0, -2.5, 3.0, 9, food.contains(), -2.0
4, 425, -3.5, 1.0, -2.5, 3.5, 9, food.contains(), -1.5
4, 426, -3.5, 1.0, -2.5, 4.0, 9, food.contains(), -1.0
4, 427, -3.5, 1.0, -2.5, 4.5, 9, food.contains(), -0.5
4, 428, -3.5, 1.0, -2.5, 5.0, 9, food.contains(), 0.0
4, 429, -3.5, 1.0, -2.0, 0.0, 11, contains(), -2.5
4, 430, -3.5, 1.0, -2.0, 0.5, 11, contains(), -2.5
4, 431, -3.5, 1.0, -2.0, 1.0, 11, contains(), -2.5
4, 432, -3.5, 1.0, -2.0, 1.5, 11, contains(), -2.5
4, 433, -3.5, 1.0, -2.0, 2.0, 11, contains(), -2.5
4, 434, -3.5, 1.0, -2.0, 2.5, 11, contains(), -2.5
4, 435, -3.5, 1.0, -2.0, 3.0, 9, food.contains(), -2.0
4, 436, -3.5, 1.0, -2.0, 3.5, 9, food.contains(), -1.5
4, 437, -3.5, 1.0, -2.0, 4.0, 9, food.contains(), -1.0
4, 438, -3.5, 1.0, -2.0, 4.5, 9, food.contains(), -0.5
4, 439, -3.5, 1.0, -2.0, 5.0, 16, food.isFruit(), 0.0
4, 440, -3.5, 1.0, -1.5, 0.0, 11, contains(), -2.5
4, 441, -3.5, 1.0, -1.5, 0.5, 11, contains(), -2.5
4, 442, -3.5, 1.0, -1.5, 1.0, 11, contains(), -2.5
4, 443, -3.5, 1.0, -1.5, 1.5, 11, contains(), -2.5
4, 444, -3.5, 1.0, -1.5, 2.0, 11, contains(), -2.5
4, 445, -3.5, 1.0, -1.5, 2.5, 11, contains(), -2.5
4, 446, -3.5, 1.0, -1.5, 3.0, 9, food.contains(), -2.0
4, 447, -3.5, 1.0, -1.5, 3.5, 9, food.contains(), -1.5
4, 448, -3.5, 1.0, -1.5, 4.0, 16, food.isFruit(), -1.0
4, 449, -3.5, 1.0, -1.5, 4.5, 16, food.isFruit(), 0.0
4, 450, -3.5, 1.0, -1.5, 5.0, 16, food.isFruit(), 1.0
4, 451, -3.5, 1.0, -1.0, 0.0, 11, contains(), -2.5
4, 452, -3.5, 1.0, -1.0, 0.5, 11, contains(), -2.5
4, 453, -3.5, 1.0, -1.0, 1.0, 11, contains(), -2.5
4, 454, -3.5, 1.0, -1.0, 1.5, 11, contains(), -2.5
4, 455, -3.5, 1.0, -1.0, 2.0, 11, contains(), -2.5
4, 456, -3.5, 1.0, -1.0, 2.5, 11, contains(), -2.5
4, 457, -3.5, 1.0, -1.0, 3.0, 16, food.isFruit(), -2.0
4, 458, -3.5, 1.0, -1.0, 3.5, 16, food.isFruit(), -1.0
4, 459, -3.5, 1.0, -1.0, 4.0, 16, food.isFruit(), 0.0
4, 460, -3.5, 1.0, -1.0, 4.5, 16, food.isFruit(), 1.0
4, 461, -3.5, 1.0, -1.0, 5.0, 16, food.isFruit(), 2.0
4, 462, -3.5, 1.0, -0.5, 0.0, 11, contains(), -2.5
4, 463, -3.5, 1.0, -0.5, 0.5, 11, contains(), -2.5
4, 464, -3.5, 1.0, -0.5, 1.0, 11, contains(), -2.5
4, 465, -3.5, 1.0, -0.5, 1.5, 11, contains(), -2.5
4, 466, -3.5, 1.0, -0.5, 2.0, 11, contains(), -2.5
4, 467, -3.5, 1.0, -0.5, 2.5, 16, isFruit(), -2.0
4, 468, -3.5, 1.0, -0.5, 3.0, 16, food.isFruit(), -1.0
4, 469, -3.5, 1.0, -0.5, 3.5, 16, food.isFruit(), 0.0
4, 470, -3.5, 1.0, -0.5, 4.0, 16, food.isFruit(), 1.0
4, 471, -3.5, 1.0, -0.5, 4.5, 16, food.isFruit(), 2.0
4, 472, -3.5, 1.0, -0.5, 5.0, 18, new Task04().isFruit(food), 3.5
4, 473, -3.5, 1.0, 0.0, 0.0, 12, containsKey(), -2.5
4, 474, -3.5, 1.0, 0.0, 0.5, 12, containsKey(), -2.5
4, 475, -3.5, 1.0, 0.0, 1.0, 12, containsKey(), -2.5
4, 476, -3.5, 1.0, 0.0, 1.5, 16, isFruit(), -2.0
4, 477, -3.5, 1.0, 0.0, 2.0, 16, isFruit(), -1.5
4, 478, -3.5, 1.0, 0.0, 2.5, 16, isFruit(), -1.0
4, 479, -3.5, 1.0, 0.0, 3.0, 16, food.isFruit(), 0.0
4, 480, -3.5, 1.0, 0.0, 3.5, 16, food.isFruit(), 1.0
4, 481, -3.5, 1.0, 0.0, 4.0, 18, new Task04().isFruit(food), 2.5
4, 482, -3.5, 1.0, 0.0, 4.5, 18, new Task04().isFruit(food), 4.0
4, 483, -3.5, 1.0, 0.0, 5.0, 56, Boolean.valueOf(new Task04().isFruit(food), new Task04().isFruit(food)), 6.5
4, 484, -3.0, 1.0, -5.0, 0.0, 11, contains(), -2.0
4, 485, -3.0, 1.0, -5.0, 0.5, 11, contains(), -2.0
4, 486, -3.0, 1.0, -5.0, 1.0, 11, contains(), -2.0
4, 487, -3.0, 1.0, -5.0, 1.5, 11, contains(), -2.0
4, 488, -3.0, 1.0, -5.0, 2.0, 11, contains(), -2.0
4, 489, -3.0, 1.0, -5.0, 2.5, 9, food.contains(), -1.5
4, 490, -3.0, 1.0, -5.0, 3.0, 9, food.contains(), -1.0
4, 491, -3.0, 1.0, -5.0, 3.5, 9, food.contains(), -0.5
4, 492, -3.0, 1.0, -5.0, 4.0, 9, food.contains(), 0.0
4, 493, -3.0, 1.0, -5.0, 4.5, 0, fruits.contains(food), 3.0
4, 494, -3.0, 1.0, -5.0, 5.0, 0, fruits.contains(food), 4.0
4, 495, -3.0, 1.0, -4.5, 0.0, 11, contains(), -2.0
4, 496, -3.0, 1.0, -4.5, 0.5, 11, contains(), -2.0
4, 497, -3.0, 1.0, -4.5, 1.0, 11, contains(), -2.0
4, 498, -3.0, 1.0, -4.5, 1.5, 11, contains(), -2.0
4, 499, -3.0, 1.0, -4.5, 2.0, 11, contains(), -2.0
4, 500, -3.0, 1.0, -4.5, 2.5, 9, food.contains(), -1.5
4, 501, -3.0, 1.0, -4.5, 3.0, 9, food.contains(), -1.0
4, 502, -3.0, 1.0, -4.5, 3.5, 9, food.contains(), -0.5
4, 503, -3.0, 1.0, -4.5, 4.0, 9, food.contains(), 0.0
4, 504, -3.0, 1.0, -4.5, 4.5, 0, fruits.contains(food), 3.0
4, 505, -3.0, 1.0, -4.5, 5.0, 0, fruits.contains(food), 4.0
4, 506, -3.0, 1.0, -4.0, 0.0, 11, contains(), -2.0
4, 507, -3.0, 1.0, -4.0, 0.5, 11, contains(), -2.0
4, 508, -3.0, 1.0, -4.0, 1.0, 11, contains(), -2.0
4, 509, -3.0, 1.0, -4.0, 1.5, 11, contains(), -2.0
4, 510, -3.0, 1.0, -4.0, 2.0, 11, contains(), -2.0
4, 511, -3.0, 1.0, -4.0, 2.5, 9, food.contains(), -1.5
4, 512, -3.0, 1.0, -4.0, 3.0, 9, food.contains(), -1.0
4, 513, -3.0, 1.0, -4.0, 3.5, 9, food.contains(), -0.5
4, 514, -3.0, 1.0, -4.0, 4.0, 9, food.contains(), 0.0
4, 515, -3.0, 1.0, -4.0, 4.5, 0, fruits.contains(food), 3.0
4, 516, -3.0, 1.0, -4.0, 5.0, 0, fruits.contains(food), 4.0
4, 517, -3.0, 1.0, -3.5, 0.0, 11, contains(), -2.0
4, 518, -3.0, 1.0, -3.5, 0.5, 11, contains(), -2.0
4, 519, -3.0, 1.0, -3.5, 1.0, 11, contains(), -2.0
4, 520, -3.0, 1.0, -3.5, 1.5, 11, contains(), -2.0
4, 521, -3.0, 1.0, -3.5, 2.0, 11, contains(), -2.0
4, 522, -3.0, 1.0, -3.5, 2.5, 9, food.contains(), -1.5
4, 523, -3.0, 1.0, -3.5, 3.0, 9, food.contains(), -1.0
4, 524, -3.0, 1.0, -3.5, 3.5, 9, food.contains(), -0.5
4, 525, -3.0, 1.0, -3.5, 4.0, 9, food.contains(), 0.0
4, 526, -3.0, 1.0, -3.5, 4.5, 0, fruits.contains(food), 3.0
4, 527, -3.0, 1.0, -3.5, 5.0, 0, fruits.contains(food), 4.0
4, 528, -3.0, 1.0, -3.0, 0.0, 11, contains(), -2.0
4, 529, -3.0, 1.0, -3.0, 0.5, 11, contains(), -2.0
4, 530, -3.0, 1.0, -3.0, 1.0, 11, contains(), -2.0
4, 531, -3.0, 1.0, -3.0, 1.5, 11, contains(), -2.0
4, 532, -3.0, 1.0, -3.0, 2.0, 11, contains(), -2.0
4, 533, -3.0, 1.0, -3.0, 2.5, 9, food.contains(), -1.5
4, 534, -3.0, 1.0, -3.0, 3.0, 9, food.contains(), -1.0
4, 535, -3.0, 1.0, -3.0, 3.5, 9, food.contains(), -0.5
4, 536, -3.0, 1.0, -3.0, 4.0, 9, food.contains(), 0.0
4, 537, -3.0, 1.0, -3.0, 4.5, 0, fruits.contains(food), 3.0
4, 538, -3.0, 1.0, -3.0, 5.0, 0, fruits.contains(food), 4.0
4, 539, -3.0, 1.0, -2.5, 0.0, 11, contains(), -2.0
4, 540, -3.0, 1.0, -2.5, 0.5, 11, contains(), -2.0
4, 541, -3.0, 1.0, -2.5, 1.0, 11, contains(), -2.0
4, 542, -3.0, 1.0, -2.5, 1.5, 11, contains(), -2.0
4, 543, -3.0, 1.0, -2.5, 2.0, 11, contains(), -2.0
4, 544, -3.0, 1.0, -2.5, 2.5, 9, food.contains(), -1.5
4, 545, -3.0, 1.0, -2.5, 3.0, 9, food.contains(), -1.0
4, 546, -3.0, 1.0, -2.5, 3.5, 9, food.contains(), -0.5
4, 547, -3.0, 1.0, -2.5, 4.0, 9, food.contains(), 0.0
4, 548, -3.0, 1.0, -2.5, 4.5, 0, fruits.contains(food), 3.0
4, 549, -3.0, 1.0, -2.5, 5.0, 0, fruits.contains(food), 4.0
4, 550, -3.0, 1.0, -2.0, 0.0, 11, contains(), -2.0
4, 551, -3.0, 1.0, -2.0, 0.5, 11, contains(), -2.0
4, 552, -3.0, 1.0, -2.0, 1.0, 11, contains(), -2.0
4, 553, -3.0, 1.0, -2.0, 1.5, 11, contains(), -2.0
4, 554, -3.0, 1.0, -2.0, 2.0, 11, contains(), -2.0
4, 555, -3.0, 1.0, -2.0, 2.5, 9, food.contains(), -1.5
4, 556, -3.0, 1.0, -2.0, 3.0, 9, food.contains(), -1.0
4, 557, -3.0, 1.0, -2.0, 3.5, 9, food.contains(), -0.5
4, 558, -3.0, 1.0, -2.0, 4.0, 9, food.contains(), 0.0
4, 559, -3.0, 1.0, -2.0, 4.5, 0, fruits.contains(food), 3.0
4, 560, -3.0, 1.0, -2.0, 5.0, 0, fruits.contains(food), 4.0
4, 561, -3.0, 1.0, -1.5, 0.0, 11, contains(), -2.0
4, 562, -3.0, 1.0, -1.5, 0.5, 11, contains(), -2.0
4, 563, -3.0, 1.0, -1.5, 1.0, 11, contains(), -2.0
4, 564, -3.0, 1.0, -1.5, 1.5, 11, contains(), -2.0
4, 565, -3.0, 1.0, -1.5, 2.0, 11, contains(), -2.0
4, 566, -3.0, 1.0, -1.5, 2.5, 9, food.contains(), -1.5
4, 567, -3.0, 1.0, -1.5, 3.0, 9, food.contains(), -1.0
4, 568, -3.0, 1.0, -1.5, 3.5, 9, food.contains(), -0.5
4, 569, -3.0, 1.0, -1.5, 4.0, 16, food.isFruit(), 0.0
4, 570, -3.0, 1.0, -1.5, 4.5, 0, fruits.contains(food), 3.0
4, 571, -3.0, 1.0, -1.5, 5.0, 0, fruits.contains(food), 4.0
4, 572, -3.0, 1.0, -1.0, 0.0, 11, contains(), -2.0
4, 573, -3.0, 1.0, -1.0, 0.5, 11, contains(), -2.0
4, 574, -3.0, 1.0, -1.0, 1.0, 11, contains(), -2.0
4, 575, -3.0, 1.0, -1.0, 1.5, 11, contains(), -2.0
4, 576, -3.0, 1.0, -1.0, 2.0, 11, contains(), -2.0
4, 577, -3.0, 1.0, -1.0, 2.5, 9, food.contains(), -1.5
4, 578, -3.0, 1.0, -1.0, 3.0, 16, food.isFruit(), -1.0
4, 579, -3.0, 1.0, -1.0, 3.5, 16, food.isFruit(), 0.0
4, 580, -3.0, 1.0, -1.0, 4.0, 16, food.isFruit(), 1.0
4, 581, -3.0, 1.0, -1.0, 4.5, 0, fruits.contains(food), 3.0
4, 582, -3.0, 1.0, -1.0, 5.0, 0, fruits.contains(food), 4.0
4, 583, -3.0, 1.0, -0.5, 0.0, 11, contains(), -2.0
4, 584, -3.0, 1.0, -0.5, 0.5, 11, contains(), -2.0
4, 585, -3.0, 1.0, -0.5, 1.0, 11, contains(), -2.0
4, 586, -3.0, 1.0, -0.5, 1.5, 11, contains(), -2.0
4, 587, -3.0, 1.0, -0.5, 2.0, 11, contains(), -2.0
4, 588, -3.0, 1.0, -0.5, 2.5, 16, food.isFruit(), -1.0
4, 589, -3.0, 1.0, -0.5, 3.0, 16, food.isFruit(), 0.0
4, 590, -3.0, 1.0, -0.5, 3.5, 16, food.isFruit(), 1.0
4, 591, -3.0, 1.0, -0.5, 4.0, 16, food.isFruit(), 2.0
4, 592, -3.0, 1.0, -0.5, 4.5, 22, fruits.contains(new Task04().isFruit(food)), 4.0
4, 593, -3.0, 1.0, -0.5, 5.0, 22, fruits.contains(new Task04().isFruit(food)), 6.0
4, 594, -3.0, 1.0, 0.0, 0.0, 12, containsKey(), -2.0
4, 595, -3.0, 1.0, 0.0, 0.5, 12, containsKey(), -2.0
4, 596, -3.0, 1.0, 0.0, 1.0, 12, containsKey(), -2.0
4, 597, -3.0, 1.0, 0.0, 1.5, 16, isFruit(), -1.5
4, 598, -3.0, 1.0, 0.0, 2.0, 16, isFruit(), -1.0
4, 599, -3.0, 1.0, 0.0, 2.5, 16, food.isFruit(), 0.0
4, 600, -3.0, 1.0, 0.0, 3.0, 16, food.isFruit(), 1.0
4, 601, -3.0, 1.0, 0.0, 3.5, 18, new Task04().isFruit(food), 2.5
4, 602, -3.0, 1.0, 0.0, 4.0, 56, Boolean.valueOf(new Task04().isFruit(food), new Task04().isFruit(food)), 4.0
4, 603, -3.0, 1.0, 0.0, 4.5, 56, Boolean.valueOf(new Task04().isFruit(food), new Task04().isFruit(food)), 7.0
4, 604, -3.0, 1.0, 0.0, 5.0, 56, Boolean.valueOf(new Task04().isFruit(food), new Task04().isFruit(food)), 10.0
4, 605, -2.5, 1.0, -5.0, 0.0, 11, contains(), -1.5
4, 606, -2.5, 1.0, -5.0, 0.5, 11, contains(), -1.5
4, 607, -2.5, 1.0, -5.0, 1.0, 11, contains(), -1.5
4, 608, -2.5, 1.0, -5.0, 1.5, 11, contains(), -1.5
4, 609, -2.5, 1.0, -5.0, 2.0, 9, food.contains(), -1.0
4, 610, -2.5, 1.0, -5.0, 2.5, 9, food.contains(), -0.5
4, 611, -2.5, 1.0, -5.0, 3.0, 9, food.contains(), 0.0
4, 612, -2.5, 1.0, -5.0, 3.5, 0, fruits.contains(food), 2.5
4, 613, -2.5, 1.0, -5.0, 4.0, 0, fruits.contains(food), 3.5
4, 614, -2.5, 1.0, -5.0, 4.5, 0, fruits.contains(food), 4.5
4, 615, -2.5, 1.0, -5.0, 5.0, 0, fruits.contains(food), 5.5
4, 616, -2.5, 1.0, -4.5, 0.0, 11, contains(), -1.5
4, 617, -2.5, 1.0, -4.5, 0.5, 11, contains(), -1.5
4, 618, -2.5, 1.0, -4.5, 1.0, 11, contains(), -1.5
4, 619, -2.5, 1.0, -4.5, 1.5, 11, contains(), -1.5
4, 620, -2.5, 1.0, -4.5, 2.0, 9, food.contains(), -1.0
4, 621, -2.5, 1.0, -4.5, 2.5, 9, food.contains(), -0.5
4, 622, -2.5, 1.0, -4.5, 3.0, 9, food.contains(), 0.0
4, 623, -2.5, 1.0, -4.5, 3.5, 0, fruits.contains(food), 2.5
4, 624, -2.5, 1.0, -4.5, 4.0, 0, fruits.contains(food), 3.5
4, 625, -2.5, 1.0, -4.5, 4.5, 0, fruits.contains(food), 4.5
4, 626, -2.5, 1.0, -4.5, 5.0, 0, fruits.contains(food), 5.5
4, 627, -2.5, 1.0, -4.0, 0.0, 11, contains(), -1.5
4, 628, -2.5, 1.0, -4.0, 0.5, 11, contains(), -1.5
4, 629, -2.5, 1.0, -4.0, 1.0, 11, contains(), -1.5
4, 630, -2.5, 1.0, -4.0, 1.5, 11, contains(), -1.5
4, 631, -2.5, 1.0, -4.0, 2.0, 9, food.contains(), -1.0
4, 632, -2.5, 1.0, -4.0, 2.5, 9, food.contains(), -0.5
4, 633, -2.5, 1.0, -4.0, 3.0, 9, food.contains(), 0.0
4, 634, -2.5, 1.0, -4.0, 3.5, 0, fruits.contains(food), 2.5
4, 635, -2.5, 1.0, -4.0, 4.0, 0, fruits.contains(food), 3.5
4, 636, -2.5, 1.0, -4.0, 4.5, 0, fruits.contains(food), 4.5
4, 637, -2.5, 1.0, -4.0, 5.0, 0, fruits.contains(food), 5.5
4, 638, -2.5, 1.0, -3.5, 0.0, 11, contains(), -1.5
4, 639, -2.5, 1.0, -3.5, 0.5, 11, contains(), -1.5
4, 640, -2.5, 1.0, -3.5, 1.0, 11, contains(), -1.5
4, 641, -2.5, 1.0, -3.5, 1.5, 11, contains(), -1.5
4, 642, -2.5, 1.0, -3.5, 2.0, 9, food.contains(), -1.0
4, 643, -2.5, 1.0, -3.5, 2.5, 9, food.contains(), -0.5
4, 644, -2.5, 1.0, -3.5, 3.0, 9, food.contains(), 0.0
4, 645, -2.5, 1.0, -3.5, 3.5, 0, fruits.contains(food), 2.5
4, 646, -2.5, 1.0, -3.5, 4.0, 0, fruits.contains(food), 3.5
4, 647, -2.5, 1.0, -3.5, 4.5, 0, fruits.contains(food), 4.5
4, 648, -2.5, 1.0, -3.5, 5.0, 0, fruits.contains(food), 5.5
4, 649, -2.5, 1.0, -3.0, 0.0, 11, contains(), -1.5
4, 650, -2.5, 1.0, -3.0, 0.5, 11, contains(), -1.5
4, 651, -2.5, 1.0, -3.0, 1.0, 11, contains(), -1.5
4, 652, -2.5, 1.0, -3.0, 1.5, 11, contains(), -1.5
4, 653, -2.5, 1.0, -3.0, 2.0, 9, food.contains(), -1.0
4, 654, -2.5, 1.0, -3.0, 2.5, 9, food.contains(), -0.5
4, 655, -2.5, 1.0, -3.0, 3.0, 9, food.contains(), 0.0
4, 656, -2.5, 1.0, -3.0, 3.5, 0, fruits.contains(food), 2.5
4, 657, -2.5, 1.0, -3.0, 4.0, 0, fruits.contains(food), 3.5
4, 658, -2.5, 1.0, -3.0, 4.5, 0, fruits.contains(food), 4.5
4, 659, -2.5, 1.0, -3.0, 5.0, 0, fruits.contains(food), 5.5
4, 660, -2.5, 1.0, -2.5, 0.0, 11, contains(), -1.5
4, 661, -2.5, 1.0, -2.5, 0.5, 11, contains(), -1.5
4, 662, -2.5, 1.0, -2.5, 1.0, 11, contains(), -1.5
4, 663, -2.5, 1.0, -2.5, 1.5, 11, contains(), -1.5
4, 664, -2.5, 1.0, -2.5, 2.0, 9, food.contains(), -1.0
4, 665, -2.5, 1.0, -2.5, 2.5, 9, food.contains(), -0.5
4, 666, -2.5, 1.0, -2.5, 3.0, 9, food.contains(), 0.0
4, 667, -2.5, 1.0, -2.5, 3.5, 0, fruits.contains(food), 2.5
4, 668, -2.5, 1.0, -2.5, 4.0, 0, fruits.contains(food), 3.5
4, 669, -2.5, 1.0, -2.5, 4.5, 0, fruits.contains(food), 4.5
4, 670, -2.5, 1.0, -2.5, 5.0, 0, fruits.contains(food), 5.5
4, 671, -2.5, 1.0, -2.0, 0.0, 11, contains(), -1.5
4, 672, -2.5, 1.0, -2.0, 0.5, 11, contains(), -1.5
4, 673, -2.5, 1.0, -2.0, 1.0, 11, contains(), -1.5
4, 674, -2.5, 1.0, -2.0, 1.5, 11, contains(), -1.5
4, 675, -2.5, 1.0, -2.0, 2.0, 9, food.contains(), -1.0
4, 676, -2.5, 1.0, -2.0, 2.5, 9, food.contains(), -0.5
4, 677, -2.5, 1.0, -2.0, 3.0, 9, food.contains(), 0.0
4, 678, -2.5, 1.0, -2.0, 3.5, 0, fruits.contains(food), 2.5
4, 679, -2.5, 1.0, -2.0, 4.0, 0, fruits.contains(food), 3.5
4, 680, -2.5, 1.0, -2.0, 4.5, 0, fruits.contains(food), 4.5
4, 681, -2.5, 1.0, -2.0, 5.0, 0, fruits.contains(food), 5.5
4, 682, -2.5, 1.0, -1.5, 0.0, 11, contains(), -1.5
4, 683, -2.5, 1.0, -1.5, 0.5, 11, contains(), -1.5
4, 684, -2.5, 1.0, -1.5, 1.0, 11, contains(), -1.5
4, 685, -2.5, 1.0, -1.5, 1.5, 11, contains(), -1.5
4, 686, -2.5, 1.0, -1.5, 2.0, 9, food.contains(), -1.0
4, 687, -2.5, 1.0, -1.5, 2.5, 9, food.contains(), -0.5
4, 688, -2.5, 1.0, -1.5, 3.0, 9, food.contains(), 0.0
4, 689, -2.5, 1.0, -1.5, 3.5, 0, fruits.contains(food), 2.5
4, 690, -2.5, 1.0, -1.5, 4.0, 0, fruits.contains(food), 3.5
4, 691, -2.5, 1.0, -1.5, 4.5, 0, fruits.contains(food), 4.5
4, 692, -2.5, 1.0, -1.5, 5.0, 0, fruits.contains(food), 5.5
4, 693, -2.5, 1.0, -1.0, 0.0, 11, contains(), -1.5
4, 694, -2.5, 1.0, -1.0, 0.5, 11, contains(), -1.5
4, 695, -2.5, 1.0, -1.0, 1.0, 11, contains(), -1.5
4, 696, -2.5, 1.0, -1.0, 1.5, 11, contains(), -1.5
4, 697, -2.5, 1.0, -1.0, 2.0, 9, food.contains(), -1.0
4, 698, -2.5, 1.0, -1.0, 2.5, 9, food.contains(), -0.5
4, 699, -2.5, 1.0, -1.0, 3.0, 16, food.isFruit(), 0.0
4, 700, -2.5, 1.0, -1.0, 3.5, 0, fruits.contains(food), 2.5
4, 701, -2.5, 1.0, -1.0, 4.0, 0, fruits.contains(food), 3.5
4, 702, -2.5, 1.0, -1.0, 4.5, 0, fruits.contains(food), 4.5
4, 703, -2.5, 1.0, -1.0, 5.0, 22, fruits.contains(new Task04().isFruit(food)), 6.5
4, 704, -2.5, 1.0, -0.5, 0.0, 11, contains(), -1.5
4, 705, -2.5, 1.0, -0.5, 0.5, 11, contains(), -1.5
4, 706, -2.5, 1.0, -0.5, 1.0, 11, contains(), -1.5
4, 707, -2.5, 1.0, -0.5, 1.5, 11, contains(), -1.5
4, 708, -2.5, 1.0, -0.5, 2.0, 16, food.isFruit(), -1.0
4, 709, -2.5, 1.0, -0.5, 2.5, 16, food.isFruit(), 0.0
4, 710, -2.5, 1.0, -0.5, 3.0, 16, food.isFruit(), 1.0
4, 711, -2.5, 1.0, -0.5, 3.5, 0, fruits.contains(food), 2.5
4, 712, -2.5, 1.0, -0.5, 4.0, 22, fruits.contains(new Task04().isFruit(food)), 4.5
4, 713, -2.5, 1.0, -0.5, 4.5, 22, fruits.contains(new Task04().isFruit(food)), 6.5
4, 714, -2.5, 1.0, -0.5, 5.0, 122, food.replace(food, food).regionMatches(new Task04().isFruit(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 11.5
4, 715, -2.5, 1.0, 0.0, 0.0, 12, containsKey(), -1.5
4, 716, -2.5, 1.0, 0.0, 0.5, 12, containsKey(), -1.5
4, 717, -2.5, 1.0, 0.0, 1.0, 12, containsKey(), -1.5
4, 718, -2.5, 1.0, 0.0, 1.5, 16, isFruit(), -1.0
4, 719, -2.5, 1.0, 0.0, 2.0, 16, food.isFruit(), 0.0
4, 720, -2.5, 1.0, 0.0, 2.5, 16, food.isFruit(), 1.0
4, 721, -2.5, 1.0, 0.0, 3.0, 18, new Task04().isFruit(food), 2.5
4, 722, -2.5, 1.0, 0.0, 3.5, 22, fruits.contains(new Task04().isFruit(food)), 4.5
4, 723, -2.5, 1.0, 0.0, 4.0, 56, Boolean.valueOf(new Task04().isFruit(food), new Task04().isFruit(food)), 7.5
4, 724, -2.5, 1.0, 0.0, 4.5, 149, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replaceAll(food, food), food.compareTo(food), food.compareTo(food)), 16.0
4, 725, -2.5, 1.0, 0.0, 5.0, 149, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replaceAll(food, food), food.compareTo(food), food.compareTo(food)), 23.5
4, 726, -2.0, 1.0, -5.0, 0.0, 11, contains(), -1.0
4, 727, -2.0, 1.0, -5.0, 0.5, 11, contains(), -1.0
4, 728, -2.0, 1.0, -5.0, 1.0, 11, contains(), -1.0
4, 729, -2.0, 1.0, -5.0, 1.5, 9, food.contains(), -0.5
4, 730, -2.0, 1.0, -5.0, 2.0, 9, food.contains(), 0.0
4, 731, -2.0, 1.0, -5.0, 2.5, 0, fruits.contains(food), 2.0
4, 732, -2.0, 1.0, -5.0, 3.0, 0, fruits.contains(food), 3.0
4, 733, -2.0, 1.0, -5.0, 3.5, 0, fruits.contains(food), 4.0
4, 734, -2.0, 1.0, -5.0, 4.0, 0, fruits.contains(food), 5.0
4, 735, -2.0, 1.0, -5.0, 4.5, 17, fruits.contains(fruits.contains(food)), 6.5
4, 736, -2.0, 1.0, -5.0, 5.0, 17, fruits.contains(fruits.contains(food)), 8.0
4, 737, -2.0, 1.0, -4.5, 0.0, 11, contains(), -1.0
4, 738, -2.0, 1.0, -4.5, 0.5, 11, contains(), -1.0
4, 739, -2.0, 1.0, -4.5, 1.0, 11, contains(), -1.0
4, 740, -2.0, 1.0, -4.5, 1.5, 9, food.contains(), -0.5
4, 741, -2.0, 1.0, -4.5, 2.0, 9, food.contains(), 0.0
4, 742, -2.0, 1.0, -4.5, 2.5, 0, fruits.contains(food), 2.0
4, 743, -2.0, 1.0, -4.5, 3.0, 0, fruits.contains(food), 3.0
4, 744, -2.0, 1.0, -4.5, 3.5, 0, fruits.contains(food), 4.0
4, 745, -2.0, 1.0, -4.5, 4.0, 0, fruits.contains(food), 5.0
4, 746, -2.0, 1.0, -4.5, 4.5, 17, fruits.contains(fruits.contains(food)), 6.5
4, 747, -2.0, 1.0, -4.5, 5.0, 17, fruits.contains(fruits.contains(food)), 8.0
4, 748, -2.0, 1.0, -4.0, 0.0, 11, contains(), -1.0
4, 749, -2.0, 1.0, -4.0, 0.5, 11, contains(), -1.0
4, 750, -2.0, 1.0, -4.0, 1.0, 11, contains(), -1.0
4, 751, -2.0, 1.0, -4.0, 1.5, 9, food.contains(), -0.5
4, 752, -2.0, 1.0, -4.0, 2.0, 9, food.contains(), 0.0
4, 753, -2.0, 1.0, -4.0, 2.5, 0, fruits.contains(food), 2.0
4, 754, -2.0, 1.0, -4.0, 3.0, 0, fruits.contains(food), 3.0
4, 755, -2.0, 1.0, -4.0, 3.5, 0, fruits.contains(food), 4.0
4, 756, -2.0, 1.0, -4.0, 4.0, 0, fruits.contains(food), 5.0
4, 757, -2.0, 1.0, -4.0, 4.5, 17, fruits.contains(fruits.contains(food)), 6.5
4, 758, -2.0, 1.0, -4.0, 5.0, 17, fruits.contains(fruits.contains(food)), 8.0
4, 759, -2.0, 1.0, -3.5, 0.0, 11, contains(), -1.0
4, 760, -2.0, 1.0, -3.5, 0.5, 11, contains(), -1.0
4, 761, -2.0, 1.0, -3.5, 1.0, 11, contains(), -1.0
4, 762, -2.0, 1.0, -3.5, 1.5, 9, food.contains(), -0.5
4, 763, -2.0, 1.0, -3.5, 2.0, 9, food.contains(), 0.0
4, 764, -2.0, 1.0, -3.5, 2.5, 0, fruits.contains(food), 2.0
4, 765, -2.0, 1.0, -3.5, 3.0, 0, fruits.contains(food), 3.0
4, 766, -2.0, 1.0, -3.5, 3.5, 0, fruits.contains(food), 4.0
4, 767, -2.0, 1.0, -3.5, 4.0, 0, fruits.contains(food), 5.0
4, 768, -2.0, 1.0, -3.5, 4.5, 17, fruits.contains(fruits.contains(food)), 6.5
4, 769, -2.0, 1.0, -3.5, 5.0, 17, fruits.contains(fruits.contains(food)), 8.0
4, 770, -2.0, 1.0, -3.0, 0.0, 11, contains(), -1.0
4, 771, -2.0, 1.0, -3.0, 0.5, 11, contains(), -1.0
4, 772, -2.0, 1.0, -3.0, 1.0, 11, contains(), -1.0
4, 773, -2.0, 1.0, -3.0, 1.5, 9, food.contains(), -0.5
4, 774, -2.0, 1.0, -3.0, 2.0, 9, food.contains(), 0.0
4, 775, -2.0, 1.0, -3.0, 2.5, 0, fruits.contains(food), 2.0
4, 776, -2.0, 1.0, -3.0, 3.0, 0, fruits.contains(food), 3.0
4, 777, -2.0, 1.0, -3.0, 3.5, 0, fruits.contains(food), 4.0
4, 778, -2.0, 1.0, -3.0, 4.0, 0, fruits.contains(food), 5.0
4, 779, -2.0, 1.0, -3.0, 4.5, 17, fruits.contains(fruits.contains(food)), 6.5
4, 780, -2.0, 1.0, -3.0, 5.0, 17, fruits.contains(fruits.contains(food)), 8.0
4, 781, -2.0, 1.0, -2.5, 0.0, 11, contains(), -1.0
4, 782, -2.0, 1.0, -2.5, 0.5, 11, contains(), -1.0
4, 783, -2.0, 1.0, -2.5, 1.0, 11, contains(), -1.0
4, 784, -2.0, 1.0, -2.5, 1.5, 9, food.contains(), -0.5
4, 785, -2.0, 1.0, -2.5, 2.0, 9, food.contains(), 0.0
4, 786, -2.0, 1.0, -2.5, 2.5, 0, fruits.contains(food), 2.0
4, 787, -2.0, 1.0, -2.5, 3.0, 0, fruits.contains(food), 3.0
4, 788, -2.0, 1.0, -2.5, 3.5, 0, fruits.contains(food), 4.0
4, 789, -2.0, 1.0, -2.5, 4.0, 0, fruits.contains(food), 5.0
4, 790, -2.0, 1.0, -2.5, 4.5, 17, fruits.contains(fruits.contains(food)), 6.5
4, 791, -2.0, 1.0, -2.5, 5.0, 17, fruits.contains(fruits.contains(food)), 8.0
4, 792, -2.0, 1.0, -2.0, 0.0, 11, contains(), -1.0
4, 793, -2.0, 1.0, -2.0, 0.5, 11, contains(), -1.0
4, 794, -2.0, 1.0, -2.0, 1.0, 11, contains(), -1.0
4, 795, -2.0, 1.0, -2.0, 1.5, 9, food.contains(), -0.5
4, 796, -2.0, 1.0, -2.0, 2.0, 9, food.contains(), 0.0
4, 797, -2.0, 1.0, -2.0, 2.5, 0, fruits.contains(food), 2.0
4, 798, -2.0, 1.0, -2.0, 3.0, 0, fruits.contains(food), 3.0
4, 799, -2.0, 1.0, -2.0, 3.5, 0, fruits.contains(food), 4.0
4, 800, -2.0, 1.0, -2.0, 4.0, 0, fruits.contains(food), 5.0
4, 801, -2.0, 1.0, -2.0, 4.5, 17, fruits.contains(fruits.contains(food)), 6.5
4, 802, -2.0, 1.0, -2.0, 5.0, 17, fruits.contains(fruits.contains(food)), 8.0
4, 803, -2.0, 1.0, -1.5, 0.0, 11, contains(), -1.0
4, 804, -2.0, 1.0, -1.5, 0.5, 11, contains(), -1.0
4, 805, -2.0, 1.0, -1.5, 1.0, 11, contains(), -1.0
4, 806, -2.0, 1.0, -1.5, 1.5, 9, food.contains(), -0.5
4, 807, -2.0, 1.0, -1.5, 2.0, 9, food.contains(), 0.0
4, 808, -2.0, 1.0, -1.5, 2.5, 0, fruits.contains(food), 2.0
4, 809, -2.0, 1.0, -1.5, 3.0, 0, fruits.contains(food), 3.0
4, 810, -2.0, 1.0, -1.5, 3.5, 0, fruits.contains(food), 4.0
4, 811, -2.0, 1.0, -1.5, 4.0, 0, fruits.contains(food), 5.0
4, 812, -2.0, 1.0, -1.5, 4.5, 17, fruits.contains(fruits.contains(food)), 6.5
4, 813, -2.0, 1.0, -1.5, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 11.5
4, 814, -2.0, 1.0, -1.0, 0.0, 11, contains(), -1.0
4, 815, -2.0, 1.0, -1.0, 0.5, 11, contains(), -1.0
4, 816, -2.0, 1.0, -1.0, 1.0, 11, contains(), -1.0
4, 817, -2.0, 1.0, -1.0, 1.5, 9, food.contains(), -0.5
4, 818, -2.0, 1.0, -1.0, 2.0, 9, food.contains(), 0.0
4, 819, -2.0, 1.0, -1.0, 2.5, 0, fruits.contains(food), 2.0
4, 820, -2.0, 1.0, -1.0, 3.0, 0, fruits.contains(food), 3.0
4, 821, -2.0, 1.0, -1.0, 3.5, 0, fruits.contains(food), 4.0
4, 822, -2.0, 1.0, -1.0, 4.0, 0, fruits.contains(food), 5.0
4, 823, -2.0, 1.0, -1.0, 4.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 9.5
4, 824, -2.0, 1.0, -1.0, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 15.0
4, 825, -2.0, 1.0, -0.5, 0.0, 11, contains(), -1.0
4, 826, -2.0, 1.0, -0.5, 0.5, 11, contains(), -1.0
4, 827, -2.0, 1.0, -0.5, 1.0, 11, contains(), -1.0
4, 828, -2.0, 1.0, -0.5, 1.5, 9, food.contains(), -0.5
4, 829, -2.0, 1.0, -0.5, 2.0, 16, food.isFruit(), 0.0
4, 830, -2.0, 1.0, -0.5, 2.5, 0, fruits.contains(food), 2.0
4, 831, -2.0, 1.0, -0.5, 3.0, 0, fruits.contains(food), 3.0
4, 832, -2.0, 1.0, -0.5, 3.5, 22, fruits.contains(new Task04().isFruit(food)), 5.0
4, 833, -2.0, 1.0, -0.5, 4.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 7.5
4, 834, -2.0, 1.0, -0.5, 4.5, 143, food.replace(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 19.5
4, 835, -2.0, 1.0, -0.5, 5.0, 143, food.replace(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 27.0
4, 836, -2.0, 1.0, 0.0, 0.0, 12, containsKey(), -1.0
4, 837, -2.0, 1.0, 0.0, 0.5, 12, containsKey(), -1.0
4, 838, -2.0, 1.0, 0.0, 1.0, 12, containsKey(), -1.0
4, 839, -2.0, 1.0, 0.0, 1.5, 16, food.isFruit(), 0.0
4, 840, -2.0, 1.0, 0.0, 2.0, 16, food.isFruit(), 1.0
4, 841, -2.0, 1.0, 0.0, 2.5, 22, fruits.contains(new Task04().isFruit(food)), 3.0
4, 842, -2.0, 1.0, 0.0, 3.0, 22, fruits.contains(new Task04().isFruit(food)), 5.0
4, 843, -2.0, 1.0, 0.0, 3.5, 149, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replaceAll(food, food), food.compareTo(food), food.compareTo(food)), 11.5
4, 844, -2.0, 1.0, 0.0, 4.0, 149, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replaceAll(food, food), food.compareTo(food), food.compareTo(food)), 19.0
4, 845, -2.0, 1.0, 0.0, 4.5, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 26.5
4, 846, -2.0, 1.0, 0.0, 5.0, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 34.0
4, 847, -1.5, 1.0, -5.0, 0.0, 11, contains(), -0.5
4, 848, -1.5, 1.0, -5.0, 0.5, 11, contains(), -0.5
4, 849, -1.5, 1.0, -5.0, 1.0, 9, food.contains(), 0.0
4, 850, -1.5, 1.0, -5.0, 1.5, 0, fruits.contains(food), 1.5
4, 851, -1.5, 1.0, -5.0, 2.0, 0, fruits.contains(food), 2.5
4, 852, -1.5, 1.0, -5.0, 2.5, 0, fruits.contains(food), 3.5
4, 853, -1.5, 1.0, -5.0, 3.0, 0, fruits.contains(food), 4.5
4, 854, -1.5, 1.0, -5.0, 3.5, 17, fruits.contains(fruits.contains(food)), 6.0
4, 855, -1.5, 1.0, -5.0, 4.0, 17, fruits.contains(fruits.contains(food)), 7.5
4, 856, -1.5, 1.0, -5.0, 4.5, 17, fruits.contains(fruits.contains(food)), 9.0
4, 857, -1.5, 1.0, -5.0, 5.0, 17, fruits.contains(fruits.contains(food)), 10.5
4, 858, -1.5, 1.0, -4.5, 0.0, 11, contains(), -0.5
4, 859, -1.5, 1.0, -4.5, 0.5, 11, contains(), -0.5
4, 860, -1.5, 1.0, -4.5, 1.0, 9, food.contains(), 0.0
4, 861, -1.5, 1.0, -4.5, 1.5, 0, fruits.contains(food), 1.5
4, 862, -1.5, 1.0, -4.5, 2.0, 0, fruits.contains(food), 2.5
4, 863, -1.5, 1.0, -4.5, 2.5, 0, fruits.contains(food), 3.5
4, 864, -1.5, 1.0, -4.5, 3.0, 0, fruits.contains(food), 4.5
4, 865, -1.5, 1.0, -4.5, 3.5, 17, fruits.contains(fruits.contains(food)), 6.0
4, 866, -1.5, 1.0, -4.5, 4.0, 17, fruits.contains(fruits.contains(food)), 7.5
4, 867, -1.5, 1.0, -4.5, 4.5, 17, fruits.contains(fruits.contains(food)), 9.0
4, 868, -1.5, 1.0, -4.5, 5.0, 17, fruits.contains(fruits.contains(food)), 10.5
4, 869, -1.5, 1.0, -4.0, 0.0, 11, contains(), -0.5
4, 870, -1.5, 1.0, -4.0, 0.5, 11, contains(), -0.5
4, 871, -1.5, 1.0, -4.0, 1.0, 9, food.contains(), 0.0
4, 872, -1.5, 1.0, -4.0, 1.5, 0, fruits.contains(food), 1.5
4, 873, -1.5, 1.0, -4.0, 2.0, 0, fruits.contains(food), 2.5
4, 874, -1.5, 1.0, -4.0, 2.5, 0, fruits.contains(food), 3.5
4, 875, -1.5, 1.0, -4.0, 3.0, 0, fruits.contains(food), 4.5
4, 876, -1.5, 1.0, -4.0, 3.5, 17, fruits.contains(fruits.contains(food)), 6.0
4, 877, -1.5, 1.0, -4.0, 4.0, 17, fruits.contains(fruits.contains(food)), 7.5
4, 878, -1.5, 1.0, -4.0, 4.5, 17, fruits.contains(fruits.contains(food)), 9.0
4, 879, -1.5, 1.0, -4.0, 5.0, 17, fruits.contains(fruits.contains(food)), 10.5
4, 880, -1.5, 1.0, -3.5, 0.0, 11, contains(), -0.5
4, 881, -1.5, 1.0, -3.5, 0.5, 11, contains(), -0.5
4, 882, -1.5, 1.0, -3.5, 1.0, 9, food.contains(), 0.0
4, 883, -1.5, 1.0, -3.5, 1.5, 0, fruits.contains(food), 1.5
4, 884, -1.5, 1.0, -3.5, 2.0, 0, fruits.contains(food), 2.5
4, 885, -1.5, 1.0, -3.5, 2.5, 0, fruits.contains(food), 3.5
4, 886, -1.5, 1.0, -3.5, 3.0, 0, fruits.contains(food), 4.5
4, 887, -1.5, 1.0, -3.5, 3.5, 17, fruits.contains(fruits.contains(food)), 6.0
4, 888, -1.5, 1.0, -3.5, 4.0, 17, fruits.contains(fruits.contains(food)), 7.5
4, 889, -1.5, 1.0, -3.5, 4.5, 17, fruits.contains(fruits.contains(food)), 9.0
4, 890, -1.5, 1.0, -3.5, 5.0, 17, fruits.contains(fruits.contains(food)), 10.5
4, 891, -1.5, 1.0, -3.0, 0.0, 11, contains(), -0.5
4, 892, -1.5, 1.0, -3.0, 0.5, 11, contains(), -0.5
4, 893, -1.5, 1.0, -3.0, 1.0, 9, food.contains(), 0.0
4, 894, -1.5, 1.0, -3.0, 1.5, 0, fruits.contains(food), 1.5
4, 895, -1.5, 1.0, -3.0, 2.0, 0, fruits.contains(food), 2.5
4, 896, -1.5, 1.0, -3.0, 2.5, 0, fruits.contains(food), 3.5
4, 897, -1.5, 1.0, -3.0, 3.0, 0, fruits.contains(food), 4.5
4, 898, -1.5, 1.0, -3.0, 3.5, 17, fruits.contains(fruits.contains(food)), 6.0
4, 899, -1.5, 1.0, -3.0, 4.0, 17, fruits.contains(fruits.contains(food)), 7.5
4, 900, -1.5, 1.0, -3.0, 4.5, 17, fruits.contains(fruits.contains(food)), 9.0
4, 901, -1.5, 1.0, -3.0, 5.0, 17, fruits.contains(fruits.contains(food)), 10.5
4, 902, -1.5, 1.0, -2.5, 0.0, 11, contains(), -0.5
4, 903, -1.5, 1.0, -2.5, 0.5, 11, contains(), -0.5
4, 904, -1.5, 1.0, -2.5, 1.0, 9, food.contains(), 0.0
4, 905, -1.5, 1.0, -2.5, 1.5, 0, fruits.contains(food), 1.5
4, 906, -1.5, 1.0, -2.5, 2.0, 0, fruits.contains(food), 2.5
4, 907, -1.5, 1.0, -2.5, 2.5, 0, fruits.contains(food), 3.5
4, 908, -1.5, 1.0, -2.5, 3.0, 0, fruits.contains(food), 4.5
4, 909, -1.5, 1.0, -2.5, 3.5, 17, fruits.contains(fruits.contains(food)), 6.0
4, 910, -1.5, 1.0, -2.5, 4.0, 17, fruits.contains(fruits.contains(food)), 7.5
4, 911, -1.5, 1.0, -2.5, 4.5, 17, fruits.contains(fruits.contains(food)), 9.0
4, 912, -1.5, 1.0, -2.5, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 13.5
4, 913, -1.5, 1.0, -2.0, 0.0, 11, contains(), -0.5
4, 914, -1.5, 1.0, -2.0, 0.5, 11, contains(), -0.5
4, 915, -1.5, 1.0, -2.0, 1.0, 9, food.contains(), 0.0
4, 916, -1.5, 1.0, -2.0, 1.5, 0, fruits.contains(food), 1.5
4, 917, -1.5, 1.0, -2.0, 2.0, 0, fruits.contains(food), 2.5
4, 918, -1.5, 1.0, -2.0, 2.5, 0, fruits.contains(food), 3.5
4, 919, -1.5, 1.0, -2.0, 3.0, 0, fruits.contains(food), 4.5
4, 920, -1.5, 1.0, -2.0, 3.5, 17, fruits.contains(fruits.contains(food)), 6.0
4, 921, -1.5, 1.0, -2.0, 4.0, 17, fruits.contains(fruits.contains(food)), 7.5
4, 922, -1.5, 1.0, -2.0, 4.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 11.5
4, 923, -1.5, 1.0, -2.0, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 17.0
4, 924, -1.5, 1.0, -1.5, 0.0, 11, contains(), -0.5
4, 925, -1.5, 1.0, -1.5, 0.5, 11, contains(), -0.5
4, 926, -1.5, 1.0, -1.5, 1.0, 9, food.contains(), 0.0
4, 927, -1.5, 1.0, -1.5, 1.5, 0, fruits.contains(food), 1.5
4, 928, -1.5, 1.0, -1.5, 2.0, 0, fruits.contains(food), 2.5
4, 929, -1.5, 1.0, -1.5, 2.5, 0, fruits.contains(food), 3.5
4, 930, -1.5, 1.0, -1.5, 3.0, 0, fruits.contains(food), 4.5
4, 931, -1.5, 1.0, -1.5, 3.5, 17, fruits.contains(fruits.contains(food)), 6.0
4, 932, -1.5, 1.0, -1.5, 4.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 9.5
4, 933, -1.5, 1.0, -1.5, 4.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 15.0
4, 934, -1.5, 1.0, -1.5, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 20.5
4, 935, -1.5, 1.0, -1.0, 0.0, 11, contains(), -0.5
4, 936, -1.5, 1.0, -1.0, 0.5, 11, contains(), -0.5
4, 937, -1.5, 1.0, -1.0, 1.0, 9, food.contains(), 0.0
4, 938, -1.5, 1.0, -1.0, 1.5, 0, fruits.contains(food), 1.5
4, 939, -1.5, 1.0, -1.0, 2.0, 0, fruits.contains(food), 2.5
4, 940, -1.5, 1.0, -1.0, 2.5, 0, fruits.contains(food), 3.5
4, 941, -1.5, 1.0, -1.0, 3.0, 0, fruits.contains(food), 4.5
4, 942, -1.5, 1.0, -1.0, 3.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 7.5
4, 943, -1.5, 1.0, -1.0, 4.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 13.0
4, 944, -1.5, 1.0, -1.0, 4.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 24.5
4, 945, -1.5, 1.0, -1.0, 5.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 31.5
4, 946, -1.5, 1.0, -0.5, 0.0, 11, contains(), -0.5
4, 947, -1.5, 1.0, -0.5, 0.5, 11, contains(), -0.5
4, 948, -1.5, 1.0, -0.5, 1.0, 9, food.contains(), 0.0
4, 949, -1.5, 1.0, -0.5, 1.5, 0, fruits.contains(food), 1.5
4, 950, -1.5, 1.0, -0.5, 2.0, 0, fruits.contains(food), 2.5
4, 951, -1.5, 1.0, -0.5, 2.5, 0, fruits.contains(food), 3.5
4, 952, -1.5, 1.0, -0.5, 3.0, 22, fruits.contains(new Task04().isFruit(food)), 5.5
4, 953, -1.5, 1.0, -0.5, 3.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 15.5
4, 954, -1.5, 1.0, -0.5, 4.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 22.5
4, 955, -1.5, 1.0, -0.5, 4.5, 143, food.replace(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 30.0
4, 956, -1.5, 1.0, -0.5, 5.0, 143, food.replace(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 37.5
4, 957, -1.5, 1.0, 0.0, 0.0, 12, containsKey(), -0.5
4, 958, -1.5, 1.0, 0.0, 0.5, 12, containsKey(), -0.5
4, 959, -1.5, 1.0, 0.0, 1.0, 16, food.isFruit(), 0.0
4, 960, -1.5, 1.0, 0.0, 1.5, 0, fruits.contains(food), 1.5
4, 961, -1.5, 1.0, 0.0, 2.0, 22, fruits.contains(new Task04().isFruit(food)), 3.5
4, 962, -1.5, 1.0, 0.0, 2.5, 149, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replaceAll(food, food), food.compareTo(food), food.compareTo(food)), 7.0
4, 963, -1.5, 1.0, 0.0, 3.0, 149, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replaceAll(food, food), food.compareTo(food), food.compareTo(food)), 14.5
4, 964, -1.5, 1.0, 0.0, 3.5, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 22.0
4, 965, -1.5, 1.0, 0.0, 4.0, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 29.5
4, 966, -1.5, 1.0, 0.0, 4.5, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 37.0
4, 967, -1.5, 1.0, 0.0, 5.0, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 44.5
4, 968, -1.0, 1.0, -5.0, 0.0, 11, contains(), 0.0
4, 969, -1.0, 1.0, -5.0, 0.5, 0, fruits.contains(food), 1.0
4, 970, -1.0, 1.0, -5.0, 1.0, 0, fruits.contains(food), 2.0
4, 971, -1.0, 1.0, -5.0, 1.5, 0, fruits.contains(food), 3.0
4, 972, -1.0, 1.0, -5.0, 2.0, 0, fruits.contains(food), 4.0
4, 973, -1.0, 1.0, -5.0, 2.5, 17, fruits.contains(fruits.contains(food)), 5.5
4, 974, -1.0, 1.0, -5.0, 3.0, 17, fruits.contains(fruits.contains(food)), 7.0
4, 975, -1.0, 1.0, -5.0, 3.5, 17, fruits.contains(fruits.contains(food)), 8.5
4, 976, -1.0, 1.0, -5.0, 4.0, 17, fruits.contains(fruits.contains(food)), 10.0
4, 977, -1.0, 1.0, -5.0, 4.5, 17, fruits.contains(fruits.contains(food)), 11.5
4, 978, -1.0, 1.0, -5.0, 5.0, 17, fruits.contains(fruits.contains(food)), 13.0
4, 979, -1.0, 1.0, -4.5, 0.0, 11, contains(), 0.0
4, 980, -1.0, 1.0, -4.5, 0.5, 0, fruits.contains(food), 1.0
4, 981, -1.0, 1.0, -4.5, 1.0, 0, fruits.contains(food), 2.0
4, 982, -1.0, 1.0, -4.5, 1.5, 0, fruits.contains(food), 3.0
4, 983, -1.0, 1.0, -4.5, 2.0, 0, fruits.contains(food), 4.0
4, 984, -1.0, 1.0, -4.5, 2.5, 17, fruits.contains(fruits.contains(food)), 5.5
4, 985, -1.0, 1.0, -4.5, 3.0, 17, fruits.contains(fruits.contains(food)), 7.0
4, 986, -1.0, 1.0, -4.5, 3.5, 17, fruits.contains(fruits.contains(food)), 8.5
4, 987, -1.0, 1.0, -4.5, 4.0, 17, fruits.contains(fruits.contains(food)), 10.0
4, 988, -1.0, 1.0, -4.5, 4.5, 17, fruits.contains(fruits.contains(food)), 11.5
4, 989, -1.0, 1.0, -4.5, 5.0, 17, fruits.contains(fruits.contains(food)), 13.0
4, 990, -1.0, 1.0, -4.0, 0.0, 11, contains(), 0.0
4, 991, -1.0, 1.0, -4.0, 0.5, 0, fruits.contains(food), 1.0
4, 992, -1.0, 1.0, -4.0, 1.0, 0, fruits.contains(food), 2.0
4, 993, -1.0, 1.0, -4.0, 1.5, 0, fruits.contains(food), 3.0
4, 994, -1.0, 1.0, -4.0, 2.0, 0, fruits.contains(food), 4.0
4, 995, -1.0, 1.0, -4.0, 2.5, 17, fruits.contains(fruits.contains(food)), 5.5
4, 996, -1.0, 1.0, -4.0, 3.0, 17, fruits.contains(fruits.contains(food)), 7.0
4, 997, -1.0, 1.0, -4.0, 3.5, 17, fruits.contains(fruits.contains(food)), 8.5
4, 998, -1.0, 1.0, -4.0, 4.0, 17, fruits.contains(fruits.contains(food)), 10.0
4, 999, -1.0, 1.0, -4.0, 4.5, 17, fruits.contains(fruits.contains(food)), 11.5
4, 1000, -1.0, 1.0, -4.0, 5.0, 17, fruits.contains(fruits.contains(food)), 13.0
4, 1001, -1.0, 1.0, -3.5, 0.0, 11, contains(), 0.0
4, 1002, -1.0, 1.0, -3.5, 0.5, 0, fruits.contains(food), 1.0
4, 1003, -1.0, 1.0, -3.5, 1.0, 0, fruits.contains(food), 2.0
4, 1004, -1.0, 1.0, -3.5, 1.5, 0, fruits.contains(food), 3.0
4, 1005, -1.0, 1.0, -3.5, 2.0, 0, fruits.contains(food), 4.0
4, 1006, -1.0, 1.0, -3.5, 2.5, 17, fruits.contains(fruits.contains(food)), 5.5
4, 1007, -1.0, 1.0, -3.5, 3.0, 17, fruits.contains(fruits.contains(food)), 7.0
4, 1008, -1.0, 1.0, -3.5, 3.5, 17, fruits.contains(fruits.contains(food)), 8.5
4, 1009, -1.0, 1.0, -3.5, 4.0, 17, fruits.contains(fruits.contains(food)), 10.0
4, 1010, -1.0, 1.0, -3.5, 4.5, 17, fruits.contains(fruits.contains(food)), 11.5
4, 1011, -1.0, 1.0, -3.5, 5.0, 42, food.replace(food, food).contains(food.replace(food, food)), 16.0
4, 1012, -1.0, 1.0, -3.0, 0.0, 11, contains(), 0.0
4, 1013, -1.0, 1.0, -3.0, 0.5, 0, fruits.contains(food), 1.0
4, 1014, -1.0, 1.0, -3.0, 1.0, 0, fruits.contains(food), 2.0
4, 1015, -1.0, 1.0, -3.0, 1.5, 0, fruits.contains(food), 3.0
4, 1016, -1.0, 1.0, -3.0, 2.0, 0, fruits.contains(food), 4.0
4, 1017, -1.0, 1.0, -3.0, 2.5, 17, fruits.contains(fruits.contains(food)), 5.5
4, 1018, -1.0, 1.0, -3.0, 3.0, 17, fruits.contains(fruits.contains(food)), 7.0
4, 1019, -1.0, 1.0, -3.0, 3.5, 17, fruits.contains(fruits.contains(food)), 8.5
4, 1020, -1.0, 1.0, -3.0, 4.0, 17, fruits.contains(fruits.contains(food)), 10.0
4, 1021, -1.0, 1.0, -3.0, 4.5, 42, food.replace(food, food).contains(food.replace(food, food)), 14.0
4, 1022, -1.0, 1.0, -3.0, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 19.0
4, 1023, -1.0, 1.0, -2.5, 0.0, 11, contains(), 0.0
4, 1024, -1.0, 1.0, -2.5, 0.5, 0, fruits.contains(food), 1.0
4, 1025, -1.0, 1.0, -2.5, 1.0, 0, fruits.contains(food), 2.0
4, 1026, -1.0, 1.0, -2.5, 1.5, 0, fruits.contains(food), 3.0
4, 1027, -1.0, 1.0, -2.5, 2.0, 0, fruits.contains(food), 4.0
4, 1028, -1.0, 1.0, -2.5, 2.5, 17, fruits.contains(fruits.contains(food)), 5.5
4, 1029, -1.0, 1.0, -2.5, 3.0, 17, fruits.contains(fruits.contains(food)), 7.0
4, 1030, -1.0, 1.0, -2.5, 3.5, 17, fruits.contains(fruits.contains(food)), 8.5
4, 1031, -1.0, 1.0, -2.5, 4.0, 42, food.replace(food, food).contains(food.replace(food, food)), 12.0
4, 1032, -1.0, 1.0, -2.5, 4.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 17.0
4, 1033, -1.0, 1.0, -2.5, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 22.5
4, 1034, -1.0, 1.0, -2.0, 0.0, 11, contains(), 0.0
4, 1035, -1.0, 1.0, -2.0, 0.5, 0, fruits.contains(food), 1.0
4, 1036, -1.0, 1.0, -2.0, 1.0, 0, fruits.contains(food), 2.0
4, 1037, -1.0, 1.0, -2.0, 1.5, 0, fruits.contains(food), 3.0
4, 1038, -1.0, 1.0, -2.0, 2.0, 0, fruits.contains(food), 4.0
4, 1039, -1.0, 1.0, -2.0, 2.5, 17, fruits.contains(fruits.contains(food)), 5.5
4, 1040, -1.0, 1.0, -2.0, 3.0, 17, fruits.contains(fruits.contains(food)), 7.0
4, 1041, -1.0, 1.0, -2.0, 3.5, 42, food.replace(food, food).contains(food.replace(food, food)), 10.0
4, 1042, -1.0, 1.0, -2.0, 4.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 15.0
4, 1043, -1.0, 1.0, -2.0, 4.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 20.5
4, 1044, -1.0, 1.0, -2.0, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 26.0
4, 1045, -1.0, 1.0, -1.5, 0.0, 11, contains(), 0.0
4, 1046, -1.0, 1.0, -1.5, 0.5, 0, fruits.contains(food), 1.0
4, 1047, -1.0, 1.0, -1.5, 1.0, 0, fruits.contains(food), 2.0
4, 1048, -1.0, 1.0, -1.5, 1.5, 0, fruits.contains(food), 3.0
4, 1049, -1.0, 1.0, -1.5, 2.0, 0, fruits.contains(food), 4.0
4, 1050, -1.0, 1.0, -1.5, 2.5, 17, fruits.contains(fruits.contains(food)), 5.5
4, 1051, -1.0, 1.0, -1.5, 3.0, 42, food.replace(food, food).contains(food.replace(food, food)), 8.0
4, 1052, -1.0, 1.0, -1.5, 3.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 13.0
4, 1053, -1.0, 1.0, -1.5, 4.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 18.5
4, 1054, -1.0, 1.0, -1.5, 4.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 30.0
4, 1055, -1.0, 1.0, -1.5, 5.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 37.0
4, 1056, -1.0, 1.0, -1.0, 0.0, 11, contains(), 0.0
4, 1057, -1.0, 1.0, -1.0, 0.5, 0, fruits.contains(food), 1.0
4, 1058, -1.0, 1.0, -1.0, 1.0, 0, fruits.contains(food), 2.0
4, 1059, -1.0, 1.0, -1.0, 1.5, 0, fruits.contains(food), 3.0
4, 1060, -1.0, 1.0, -1.0, 2.0, 0, fruits.contains(food), 4.0
4, 1061, -1.0, 1.0, -1.0, 2.5, 20, fruits.contains(food.replace(food, food)), 6.0
4, 1062, -1.0, 1.0, -1.0, 3.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 11.0
4, 1063, -1.0, 1.0, -1.0, 3.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 21.0
4, 1064, -1.0, 1.0, -1.0, 4.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 28.0
4, 1065, -1.0, 1.0, -1.0, 4.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 35.0
4, 1066, -1.0, 1.0, -1.0, 5.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 42.0
4, 1067, -1.0, 1.0, -0.5, 0.0, 11, contains(), 0.0
4, 1068, -1.0, 1.0, -0.5, 0.5, 0, fruits.contains(food), 1.0
4, 1069, -1.0, 1.0, -0.5, 1.0, 0, fruits.contains(food), 2.0
4, 1070, -1.0, 1.0, -0.5, 1.5, 0, fruits.contains(food), 3.0
4, 1071, -1.0, 1.0, -0.5, 2.0, 20, fruits.contains(food.replace(food, food)), 4.5
4, 1072, -1.0, 1.0, -0.5, 2.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 12.0
4, 1073, -1.0, 1.0, -0.5, 3.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 19.0
4, 1074, -1.0, 1.0, -0.5, 3.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 26.0
4, 1075, -1.0, 1.0, -0.5, 4.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 33.0
4, 1076, -1.0, 1.0, -0.5, 4.5, 143, food.replace(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 40.5
4, 1077, -1.0, 1.0, -0.5, 5.0, 143, food.replace(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 48.0
4, 1078, -1.0, 1.0, 0.0, 0.0, 12, containsKey(), 0.0
4, 1079, -1.0, 1.0, 0.0, 0.5, 0, fruits.contains(food), 1.0
4, 1080, -1.0, 1.0, 0.0, 1.0, 0, fruits.contains(food), 2.0
4, 1081, -1.0, 1.0, 0.0, 1.5, 22, fruits.contains(new Task04().isFruit(food)), 4.0
4, 1082, -1.0, 1.0, 0.0, 2.0, 138, food.replaceAll(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replaceAll(food, food), food.compareTo(food), food.compareTo(food)), 10.0
4, 1083, -1.0, 1.0, 0.0, 2.5, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 17.5
4, 1084, -1.0, 1.0, 0.0, 3.0, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 25.0
4, 1085, -1.0, 1.0, 0.0, 3.5, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 32.5
4, 1086, -1.0, 1.0, 0.0, 4.0, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 40.0
4, 1087, -1.0, 1.0, 0.0, 4.5, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 47.5
4, 1088, -1.0, 1.0, 0.0, 5.0, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 55.0
4, 1089, -0.5, 1.0, -5.0, 0.0, 0, fruits.contains(food), 1.5
4, 1090, -0.5, 1.0, -5.0, 0.5, 0, fruits.contains(food), 2.5
4, 1091, -0.5, 1.0, -5.0, 1.0, 0, fruits.contains(food), 3.5
4, 1092, -0.5, 1.0, -5.0, 1.5, 17, fruits.contains(fruits.contains(food)), 5.0
4, 1093, -0.5, 1.0, -5.0, 2.0, 17, fruits.contains(fruits.contains(food)), 6.5
4, 1094, -0.5, 1.0, -5.0, 2.5, 17, fruits.contains(fruits.contains(food)), 8.0
4, 1095, -0.5, 1.0, -5.0, 3.0, 17, fruits.contains(fruits.contains(food)), 9.5
4, 1096, -0.5, 1.0, -5.0, 3.5, 17, fruits.contains(fruits.contains(food)), 11.0
4, 1097, -0.5, 1.0, -5.0, 4.0, 17, fruits.contains(fruits.contains(food)), 12.5
4, 1098, -0.5, 1.0, -5.0, 4.5, 17, fruits.contains(fruits.contains(food)), 14.0
4, 1099, -0.5, 1.0, -5.0, 5.0, 17, fruits.contains(fruits.contains(food)), 15.5
4, 1100, -0.5, 1.0, -4.5, 0.0, 0, fruits.contains(food), 1.5
4, 1101, -0.5, 1.0, -4.5, 0.5, 0, fruits.contains(food), 2.5
4, 1102, -0.5, 1.0, -4.5, 1.0, 0, fruits.contains(food), 3.5
4, 1103, -0.5, 1.0, -4.5, 1.5, 17, fruits.contains(fruits.contains(food)), 5.0
4, 1104, -0.5, 1.0, -4.5, 2.0, 17, fruits.contains(fruits.contains(food)), 6.5
4, 1105, -0.5, 1.0, -4.5, 2.5, 17, fruits.contains(fruits.contains(food)), 8.0
4, 1106, -0.5, 1.0, -4.5, 3.0, 17, fruits.contains(fruits.contains(food)), 9.5
4, 1107, -0.5, 1.0, -4.5, 3.5, 17, fruits.contains(fruits.contains(food)), 11.0
4, 1108, -0.5, 1.0, -4.5, 4.0, 17, fruits.contains(fruits.contains(food)), 12.5
4, 1109, -0.5, 1.0, -4.5, 4.5, 17, fruits.contains(fruits.contains(food)), 14.0
4, 1110, -0.5, 1.0, -4.5, 5.0, 42, food.replace(food, food).contains(food.replace(food, food)), 18.5
4, 1111, -0.5, 1.0, -4.0, 0.0, 0, fruits.contains(food), 1.5
4, 1112, -0.5, 1.0, -4.0, 0.5, 0, fruits.contains(food), 2.5
4, 1113, -0.5, 1.0, -4.0, 1.0, 0, fruits.contains(food), 3.5
4, 1114, -0.5, 1.0, -4.0, 1.5, 17, fruits.contains(fruits.contains(food)), 5.0
4, 1115, -0.5, 1.0, -4.0, 2.0, 17, fruits.contains(fruits.contains(food)), 6.5
4, 1116, -0.5, 1.0, -4.0, 2.5, 17, fruits.contains(fruits.contains(food)), 8.0
4, 1117, -0.5, 1.0, -4.0, 3.0, 17, fruits.contains(fruits.contains(food)), 9.5
4, 1118, -0.5, 1.0, -4.0, 3.5, 17, fruits.contains(fruits.contains(food)), 11.0
4, 1119, -0.5, 1.0, -4.0, 4.0, 17, fruits.contains(fruits.contains(food)), 12.5
4, 1120, -0.5, 1.0, -4.0, 4.5, 42, food.replace(food, food).contains(food.replace(food, food)), 16.5
4, 1121, -0.5, 1.0, -4.0, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 21.0
4, 1122, -0.5, 1.0, -3.5, 0.0, 0, fruits.contains(food), 1.5
4, 1123, -0.5, 1.0, -3.5, 0.5, 0, fruits.contains(food), 2.5
4, 1124, -0.5, 1.0, -3.5, 1.0, 0, fruits.contains(food), 3.5
4, 1125, -0.5, 1.0, -3.5, 1.5, 17, fruits.contains(fruits.contains(food)), 5.0
4, 1126, -0.5, 1.0, -3.5, 2.0, 17, fruits.contains(fruits.contains(food)), 6.5
4, 1127, -0.5, 1.0, -3.5, 2.5, 17, fruits.contains(fruits.contains(food)), 8.0
4, 1128, -0.5, 1.0, -3.5, 3.0, 17, fruits.contains(fruits.contains(food)), 9.5
4, 1129, -0.5, 1.0, -3.5, 3.5, 17, fruits.contains(fruits.contains(food)), 11.0
4, 1130, -0.5, 1.0, -3.5, 4.0, 42, food.replace(food, food).contains(food.replace(food, food)), 14.5
4, 1131, -0.5, 1.0, -3.5, 4.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 19.0
4, 1132, -0.5, 1.0, -3.5, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 24.5
4, 1133, -0.5, 1.0, -3.0, 0.0, 0, fruits.contains(food), 1.5
4, 1134, -0.5, 1.0, -3.0, 0.5, 0, fruits.contains(food), 2.5
4, 1135, -0.5, 1.0, -3.0, 1.0, 0, fruits.contains(food), 3.5
4, 1136, -0.5, 1.0, -3.0, 1.5, 17, fruits.contains(fruits.contains(food)), 5.0
4, 1137, -0.5, 1.0, -3.0, 2.0, 17, fruits.contains(fruits.contains(food)), 6.5
4, 1138, -0.5, 1.0, -3.0, 2.5, 17, fruits.contains(fruits.contains(food)), 8.0
4, 1139, -0.5, 1.0, -3.0, 3.0, 17, fruits.contains(fruits.contains(food)), 9.5
4, 1140, -0.5, 1.0, -3.0, 3.5, 42, food.replace(food, food).contains(food.replace(food, food)), 12.5
4, 1141, -0.5, 1.0, -3.0, 4.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 17.0
4, 1142, -0.5, 1.0, -3.0, 4.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 22.5
4, 1143, -0.5, 1.0, -3.0, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 28.0
4, 1144, -0.5, 1.0, -2.5, 0.0, 0, fruits.contains(food), 1.5
4, 1145, -0.5, 1.0, -2.5, 0.5, 0, fruits.contains(food), 2.5
4, 1146, -0.5, 1.0, -2.5, 1.0, 0, fruits.contains(food), 3.5
4, 1147, -0.5, 1.0, -2.5, 1.5, 17, fruits.contains(fruits.contains(food)), 5.0
4, 1148, -0.5, 1.0, -2.5, 2.0, 17, fruits.contains(fruits.contains(food)), 6.5
4, 1149, -0.5, 1.0, -2.5, 2.5, 17, fruits.contains(fruits.contains(food)), 8.0
4, 1150, -0.5, 1.0, -2.5, 3.0, 42, food.replace(food, food).contains(food.replace(food, food)), 10.5
4, 1151, -0.5, 1.0, -2.5, 3.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 15.0
4, 1152, -0.5, 1.0, -2.5, 4.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 20.5
4, 1153, -0.5, 1.0, -2.5, 4.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 26.0
4, 1154, -0.5, 1.0, -2.5, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 31.5
4, 1155, -0.5, 1.0, -2.0, 0.0, 0, fruits.contains(food), 1.5
4, 1156, -0.5, 1.0, -2.0, 0.5, 0, fruits.contains(food), 2.5
4, 1157, -0.5, 1.0, -2.0, 1.0, 0, fruits.contains(food), 3.5
4, 1158, -0.5, 1.0, -2.0, 1.5, 17, fruits.contains(fruits.contains(food)), 5.0
4, 1159, -0.5, 1.0, -2.0, 2.0, 17, fruits.contains(fruits.contains(food)), 6.5
4, 1160, -0.5, 1.0, -2.0, 2.5, 42, food.replace(food, food).contains(food.replace(food, food)), 8.5
4, 1161, -0.5, 1.0, -2.0, 3.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 13.0
4, 1162, -0.5, 1.0, -2.0, 3.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 18.5
4, 1163, -0.5, 1.0, -2.0, 4.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 24.0
4, 1164, -0.5, 1.0, -2.0, 4.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 35.5
4, 1165, -0.5, 1.0, -2.0, 5.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 42.5
4, 1166, -0.5, 1.0, -1.5, 0.0, 0, fruits.contains(food), 1.5
4, 1167, -0.5, 1.0, -1.5, 0.5, 0, fruits.contains(food), 2.5
4, 1168, -0.5, 1.0, -1.5, 1.0, 0, fruits.contains(food), 3.5
4, 1169, -0.5, 1.0, -1.5, 1.5, 17, fruits.contains(fruits.contains(food)), 5.0
4, 1170, -0.5, 1.0, -1.5, 2.0, 17, fruits.contains(fruits.contains(food)), 6.5
4, 1171, -0.5, 1.0, -1.5, 2.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 11.0
4, 1172, -0.5, 1.0, -1.5, 3.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 16.5
4, 1173, -0.5, 1.0, -1.5, 3.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 26.5
4, 1174, -0.5, 1.0, -1.5, 4.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 33.5
4, 1175, -0.5, 1.0, -1.5, 4.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 40.5
4, 1176, -0.5, 1.0, -1.5, 5.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 47.5
4, 1177, -0.5, 1.0, -1.0, 0.0, 0, fruits.contains(food), 1.5
4, 1178, -0.5, 1.0, -1.0, 0.5, 0, fruits.contains(food), 2.5
4, 1179, -0.5, 1.0, -1.0, 1.0, 0, fruits.contains(food), 3.5
4, 1180, -0.5, 1.0, -1.0, 1.5, 17, fruits.contains(fruits.contains(food)), 5.0
4, 1181, -0.5, 1.0, -1.0, 2.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 9.0
4, 1182, -0.5, 1.0, -1.0, 2.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 17.5
4, 1183, -0.5, 1.0, -1.0, 3.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 24.5
4, 1184, -0.5, 1.0, -1.0, 3.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 31.5
4, 1185, -0.5, 1.0, -1.0, 4.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 38.5
4, 1186, -0.5, 1.0, -1.0, 4.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 45.5
4, 1187, -0.5, 1.0, -1.0, 5.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 52.5
4, 1188, -0.5, 1.0, -0.5, 0.0, 0, fruits.contains(food), 1.5
4, 1189, -0.5, 1.0, -0.5, 0.5, 0, fruits.contains(food), 2.5
4, 1190, -0.5, 1.0, -0.5, 1.0, 0, fruits.contains(food), 3.5
4, 1191, -0.5, 1.0, -0.5, 1.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 8.5
4, 1192, -0.5, 1.0, -0.5, 2.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 15.5
4, 1193, -0.5, 1.0, -0.5, 2.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 22.5
4, 1194, -0.5, 1.0, -0.5, 3.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 29.5
4, 1195, -0.5, 1.0, -0.5, 3.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 36.5
4, 1196, -0.5, 1.0, -0.5, 4.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 43.5
4, 1197, -0.5, 1.0, -0.5, 4.5, 143, food.replace(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 51.0
4, 1198, -0.5, 1.0, -0.5, 5.0, 143, food.replace(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 58.5
4, 1199, -0.5, 1.0, 0.0, 0.0, 0, fruits.contains(food), 1.5
4, 1200, -0.5, 1.0, 0.0, 0.5, 0, fruits.contains(food), 2.5
4, 1201, -0.5, 1.0, 0.0, 1.0, 138, food.replaceAll(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replaceAll(food, food), food.compareTo(food), food.compareTo(food)), 6.5
4, 1202, -0.5, 1.0, 0.0, 1.5, 153, food.replaceAll(food, food).regionMatches(fruits.contains(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 13.5
4, 1203, -0.5, 1.0, 0.0, 2.0, 153, food.replaceAll(food, food).regionMatches(fruits.contains(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 20.5
4, 1204, -0.5, 1.0, 0.0, 2.5, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 28.0
4, 1205, -0.5, 1.0, 0.0, 3.0, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 35.5
4, 1206, -0.5, 1.0, 0.0, 3.5, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 43.0
4, 1207, -0.5, 1.0, 0.0, 4.0, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 50.5
4, 1208, -0.5, 1.0, 0.0, 4.5, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 58.0
4, 1209, -0.5, 1.0, 0.0, 5.0, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 65.5
4, 1210, 0.0, 1.0, -5.0, 0.0, 11, fruits.contains(food).contains(), 3.0
4, 1211, 0.0, 1.0, -5.0, 0.5, 17, fruits.contains(fruits.contains(food)), 4.5
4, 1212, 0.0, 1.0, -5.0, 1.0, 17, fruits.contains(fruits.contains(food)), 6.0
4, 1213, 0.0, 1.0, -5.0, 1.5, 17, fruits.contains(fruits.contains(food)), 7.5
4, 1214, 0.0, 1.0, -5.0, 2.0, 17, fruits.contains(fruits.contains(food)), 9.0
4, 1215, 0.0, 1.0, -5.0, 2.5, 17, fruits.contains(fruits.contains(food)), 10.5
4, 1216, 0.0, 1.0, -5.0, 3.0, 17, fruits.contains(fruits.contains(food)), 12.0
4, 1217, 0.0, 1.0, -5.0, 3.5, 17, fruits.contains(fruits.contains(food)), 13.5
4, 1218, 0.0, 1.0, -5.0, 4.0, 17, fruits.contains(fruits.contains(food)), 15.0
4, 1219, 0.0, 1.0, -5.0, 4.5, 42, food.replace(food, food).contains(food.replace(food, food)), 19.0
4, 1220, 0.0, 1.0, -5.0, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 23.0
4, 1221, 0.0, 1.0, -4.5, 0.0, 11, fruits.contains(food).contains(), 3.0
4, 1222, 0.0, 1.0, -4.5, 0.5, 17, fruits.contains(fruits.contains(food)), 4.5
4, 1223, 0.0, 1.0, -4.5, 1.0, 17, fruits.contains(fruits.contains(food)), 6.0
4, 1224, 0.0, 1.0, -4.5, 1.5, 17, fruits.contains(fruits.contains(food)), 7.5
4, 1225, 0.0, 1.0, -4.5, 2.0, 17, fruits.contains(fruits.contains(food)), 9.0
4, 1226, 0.0, 1.0, -4.5, 2.5, 17, fruits.contains(fruits.contains(food)), 10.5
4, 1227, 0.0, 1.0, -4.5, 3.0, 17, fruits.contains(fruits.contains(food)), 12.0
4, 1228, 0.0, 1.0, -4.5, 3.5, 17, fruits.contains(fruits.contains(food)), 13.5
4, 1229, 0.0, 1.0, -4.5, 4.0, 42, food.replace(food, food).contains(food.replace(food, food)), 17.0
4, 1230, 0.0, 1.0, -4.5, 4.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 21.0
4, 1231, 0.0, 1.0, -4.5, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 26.5
4, 1232, 0.0, 1.0, -4.0, 0.0, 11, fruits.contains(food).contains(), 3.0
4, 1233, 0.0, 1.0, -4.0, 0.5, 17, fruits.contains(fruits.contains(food)), 4.5
4, 1234, 0.0, 1.0, -4.0, 1.0, 17, fruits.contains(fruits.contains(food)), 6.0
4, 1235, 0.0, 1.0, -4.0, 1.5, 17, fruits.contains(fruits.contains(food)), 7.5
4, 1236, 0.0, 1.0, -4.0, 2.0, 17, fruits.contains(fruits.contains(food)), 9.0
4, 1237, 0.0, 1.0, -4.0, 2.5, 17, fruits.contains(fruits.contains(food)), 10.5
4, 1238, 0.0, 1.0, -4.0, 3.0, 17, fruits.contains(fruits.contains(food)), 12.0
4, 1239, 0.0, 1.0, -4.0, 3.5, 42, food.replace(food, food).contains(food.replace(food, food)), 15.0
4, 1240, 0.0, 1.0, -4.0, 4.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 19.0
4, 1241, 0.0, 1.0, -4.0, 4.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 24.5
4, 1242, 0.0, 1.0, -4.0, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 30.0
4, 1243, 0.0, 1.0, -3.5, 0.0, 11, fruits.contains(food).contains(), 3.0
4, 1244, 0.0, 1.0, -3.5, 0.5, 17, fruits.contains(fruits.contains(food)), 4.5
4, 1245, 0.0, 1.0, -3.5, 1.0, 17, fruits.contains(fruits.contains(food)), 6.0
4, 1246, 0.0, 1.0, -3.5, 1.5, 17, fruits.contains(fruits.contains(food)), 7.5
4, 1247, 0.0, 1.0, -3.5, 2.0, 17, fruits.contains(fruits.contains(food)), 9.0
4, 1248, 0.0, 1.0, -3.5, 2.5, 17, fruits.contains(fruits.contains(food)), 10.5
4, 1249, 0.0, 1.0, -3.5, 3.0, 42, food.replace(food, food).contains(food.replace(food, food)), 13.0
4, 1250, 0.0, 1.0, -3.5, 3.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 17.0
4, 1251, 0.0, 1.0, -3.5, 4.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 22.5
4, 1252, 0.0, 1.0, -3.5, 4.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 28.0
4, 1253, 0.0, 1.0, -3.5, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 33.5
4, 1254, 0.0, 1.0, -3.0, 0.0, 11, fruits.contains(food).contains(), 3.0
4, 1255, 0.0, 1.0, -3.0, 0.5, 17, fruits.contains(fruits.contains(food)), 4.5
4, 1256, 0.0, 1.0, -3.0, 1.0, 17, fruits.contains(fruits.contains(food)), 6.0
4, 1257, 0.0, 1.0, -3.0, 1.5, 17, fruits.contains(fruits.contains(food)), 7.5
4, 1258, 0.0, 1.0, -3.0, 2.0, 17, fruits.contains(fruits.contains(food)), 9.0
4, 1259, 0.0, 1.0, -3.0, 2.5, 42, food.replace(food, food).contains(food.replace(food, food)), 11.0
4, 1260, 0.0, 1.0, -3.0, 3.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 15.0
4, 1261, 0.0, 1.0, -3.0, 3.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 20.5
4, 1262, 0.0, 1.0, -3.0, 4.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 26.0
4, 1263, 0.0, 1.0, -3.0, 4.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 31.5
4, 1264, 0.0, 1.0, -3.0, 5.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 37.0
4, 1265, 0.0, 1.0, -2.5, 0.0, 11, fruits.contains(food).contains(), 3.0
4, 1266, 0.0, 1.0, -2.5, 0.5, 17, fruits.contains(fruits.contains(food)), 4.5
4, 1267, 0.0, 1.0, -2.5, 1.0, 17, fruits.contains(fruits.contains(food)), 6.0
4, 1268, 0.0, 1.0, -2.5, 1.5, 17, fruits.contains(fruits.contains(food)), 7.5
4, 1269, 0.0, 1.0, -2.5, 2.0, 17, fruits.contains(fruits.contains(food)), 9.0
4, 1270, 0.0, 1.0, -2.5, 2.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 13.0
4, 1271, 0.0, 1.0, -2.5, 3.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 18.5
4, 1272, 0.0, 1.0, -2.5, 3.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 24.0
4, 1273, 0.0, 1.0, -2.5, 4.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 29.5
4, 1274, 0.0, 1.0, -2.5, 4.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 41.0
4, 1275, 0.0, 1.0, -2.5, 5.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 48.0
4, 1276, 0.0, 1.0, -2.0, 0.0, 11, fruits.contains(food).contains(), 3.0
4, 1277, 0.0, 1.0, -2.0, 0.5, 17, fruits.contains(fruits.contains(food)), 4.5
4, 1278, 0.0, 1.0, -2.0, 1.0, 17, fruits.contains(fruits.contains(food)), 6.0
4, 1279, 0.0, 1.0, -2.0, 1.5, 17, fruits.contains(fruits.contains(food)), 7.5
4, 1280, 0.0, 1.0, -2.0, 2.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 11.0
4, 1281, 0.0, 1.0, -2.0, 2.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 16.5
4, 1282, 0.0, 1.0, -2.0, 3.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 22.0
4, 1283, 0.0, 1.0, -2.0, 3.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 32.0
4, 1284, 0.0, 1.0, -2.0, 4.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 39.0
4, 1285, 0.0, 1.0, -2.0, 4.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 46.0
4, 1286, 0.0, 1.0, -2.0, 5.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 53.0
4, 1287, 0.0, 1.0, -1.5, 0.0, 11, fruits.contains(food).contains(), 3.0
4, 1288, 0.0, 1.0, -1.5, 0.5, 17, fruits.contains(fruits.contains(food)), 4.5
4, 1289, 0.0, 1.0, -1.5, 1.0, 17, fruits.contains(fruits.contains(food)), 6.0
4, 1290, 0.0, 1.0, -1.5, 1.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 9.0
4, 1291, 0.0, 1.0, -1.5, 2.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 14.5
4, 1292, 0.0, 1.0, -1.5, 2.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 23.0
4, 1293, 0.0, 1.0, -1.5, 3.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 30.0
4, 1294, 0.0, 1.0, -1.5, 3.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 37.0
4, 1295, 0.0, 1.0, -1.5, 4.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 44.0
4, 1296, 0.0, 1.0, -1.5, 4.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 51.0
4, 1297, 0.0, 1.0, -1.5, 5.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 58.0
4, 1298, 0.0, 1.0, -1.0, 0.0, 11, fruits.contains(food).contains(), 3.0
4, 1299, 0.0, 1.0, -1.0, 0.5, 17, fruits.contains(fruits.contains(food)), 4.5
4, 1300, 0.0, 1.0, -1.0, 1.0, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 7.0
4, 1301, 0.0, 1.0, -1.0, 1.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 14.0
4, 1302, 0.0, 1.0, -1.0, 2.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 21.0
4, 1303, 0.0, 1.0, -1.0, 2.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 28.0
4, 1304, 0.0, 1.0, -1.0, 3.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 35.0
4, 1305, 0.0, 1.0, -1.0, 3.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 42.0
4, 1306, 0.0, 1.0, -1.0, 4.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 49.0
4, 1307, 0.0, 1.0, -1.0, 4.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 56.0
4, 1308, 0.0, 1.0, -1.0, 5.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 63.0
4, 1309, 0.0, 1.0, -0.5, 0.0, 11, fruits.contains(food).contains(), 3.0
4, 1310, 0.0, 1.0, -0.5, 0.5, 111, food.replace(food, food).regionMatches(fruits.contains(food), fruits.size(), food.replace(food, food), fruits.size(), fruits.size()), 5.0
4, 1311, 0.0, 1.0, -0.5, 1.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 12.0
4, 1312, 0.0, 1.0, -0.5, 1.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 19.0
4, 1313, 0.0, 1.0, -0.5, 2.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 26.0
4, 1314, 0.0, 1.0, -0.5, 2.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 33.0
4, 1315, 0.0, 1.0, -0.5, 3.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 40.0
4, 1316, 0.0, 1.0, -0.5, 3.5, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 47.0
4, 1317, 0.0, 1.0, -0.5, 4.0, 132, food.replace(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 54.0
4, 1318, 0.0, 1.0, -0.5, 4.5, 143, food.replace(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 61.5
4, 1319, 0.0, 1.0, -0.5, 5.0, 143, food.replace(food, food).regionMatches(new Task04().isFruit(food), food.compareTo(food), food.replace(food, food), food.compareTo(food), food.compareTo(food)), 69.0
4, 1320, 0.0, 1.0, 0.0, 0.0, 33, fruits.add(String.valueOf(food, containsValue())), 3.0
4, 1321, 0.0, 1.0, 0.0, 0.5, 148, String.valueOf(food, containsValue()).regionMatches(fruits.contains(food), food.compareTo(food), food.replaceAll(food, food), food.compareTo(food), food.compareTo(food)), 9.0
4, 1322, 0.0, 1.0, 0.0, 1.0, 138, food.replaceAll(food, food).regionMatches(fruits.contains(food), food.compareTo(food), food.replaceAll(food, food), food.compareTo(food), food.compareTo(food)), 17.0
4, 1323, 0.0, 1.0, 0.0, 1.5, 153, food.replaceAll(food, food).regionMatches(fruits.contains(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 24.0
4, 1324, 0.0, 1.0, 0.0, 2.0, 153, food.replaceAll(food, food).regionMatches(fruits.contains(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 31.0
4, 1325, 0.0, 1.0, 0.0, 2.5, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 38.5
4, 1326, 0.0, 1.0, 0.0, 3.0, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 46.0
4, 1327, 0.0, 1.0, 0.0, 3.5, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 53.5
4, 1328, 0.0, 1.0, 0.0, 4.0, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 61.0
4, 1329, 0.0, 1.0, 0.0, 4.5, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 68.5
4, 1330, 0.0, 1.0, 0.0, 5.0, 161, food.replaceAll(food, food).regionMatches(new Task04().isFruit(food), isFruit().compareTo(food), food.replaceAll(food, food), isFruit().compareTo(food), isFruit().compareTo(food)), 76.0
